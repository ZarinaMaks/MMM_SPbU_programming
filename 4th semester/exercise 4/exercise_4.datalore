{"version":"1.0","data":{"sheets":[{"name":"Sheet","blocks":[{"type":"MD","text":"# Part 1","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Loading the dataset","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"import numpy as np\nfrom numpy.lib.recfunctions import structured_to_unstructured","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"data = np.genfromtxt('iris.data', delimiter=\",\", encoding=\"utf8\", dtype=None)\nfeatures = structured_to_unstructured(data[[\"f0\", \"f1\", \"f2\", \"f3\"]])\nnames = data[\"f4\"]\nf\"Memory size: {features.nbytes + names.nbytes} bytes\"","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"'Memory size: 13800 bytes'","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"features","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"array([[5.1, 3.5, 1.4, 0.2],\n       [4.9, 3. , 1.4, 0.2],\n       [4.7, 3.2, 1.3, 0.2],\n       [4.6, 3.1, 1.5, 0.2],\n       [5. , 3.6, 1.4, 0.2],\n       [5.4, 3.9, 1.7, 0.4],\n       [4.6, 3.4, 1.4, 0.3],\n       [5. , 3.4, 1.5, 0.2],\n       [4.4, 2.9, 1.4, 0.2],\n       [4.9, 3.1, 1.5, 0.1],\n       [5.4, 3.7, 1.5, 0.2],\n       [4.8, 3.4, 1.6, 0.2],\n       [4.8, 3. , 1.4, 0.1],\n       [4.3, 3. , 1.1, 0.1],\n       [5.8, 4. , 1.2, 0.2],\n       [5.7, 4.4, 1.5, 0.4],\n       [5.4, 3.9, 1.3, 0.4],\n       [5.1, 3.5, 1.4, 0.3],\n       [5.7, 3.8, 1.7, 0.3],\n       [5.1, 3.8, 1.5, 0.3],\n       [5.4, 3.4, 1.7, 0.2],\n       [5.1, 3.7, 1.5, 0.4],\n       [4.6, 3.6, 1. , 0.2],\n       [5.1, 3.3, 1.7, 0.5],\n       [4.8, 3.4, 1.9, 0.2],\n       [5. , 3. , 1.6, 0.2],\n       [5. , 3.4, 1.6, 0.4],\n       [5.2, 3.5, 1.5, 0.2],\n       [5.2, 3.4, 1.4, 0.2],\n       [4.7, 3.2, 1.6, 0.2],\n       [4.8, 3.1, 1.6, 0.2],\n       [5.4, 3.4, 1.5, 0.4],\n       [5.2, 4.1, 1.5, 0.1],\n       [5.5, 4.2, 1.4, 0.2],\n       [4.9, 3.1, 1.5, 0.1],\n       [5. , 3.2, 1.2, 0.2],\n       [5.5, 3.5, 1.3, 0.2],\n       [4.9, 3.1, 1.5, 0.1],\n       [4.4, 3. , 1.3, 0.2],\n       [5.1, 3.4, 1.5, 0.2],\n       [5. , 3.5, 1.3, 0.3],\n       [4.5, 2.3, 1.3, 0.3],\n       [4.4, 3.2, 1.3, 0.2],\n       [5. , 3.5, 1.6, 0.6],\n       [5.1, 3.8, 1.9, 0.4],\n       [4.8, 3. , 1.4, 0.3],\n       [5.1, 3.8, 1.6, 0.2],\n       [4.6, 3.2, 1.4, 0.2],\n       [5.3, 3.7, 1.5, 0.2],\n       [5. , 3.3, 1.4, 0.2],\n       [7. , 3.2, 4.7, 1.4],\n       [6.4, 3.2, 4.5, 1.5],\n       [6.9, 3.1, 4.9, 1.5],\n       [5.5, 2.3, 4. , 1.3],\n       [6.5, 2.8, 4.6, 1.5],\n       [5.7, 2.8, 4.5, 1.3],\n       [6.3, 3.3, 4.7, 1.6],\n       [4.9, 2.4, 3.3, 1. ],\n       [6.6, 2.9, 4.6, 1.3],\n       [5.2, 2.7, 3.9, 1.4],\n       [5. , 2. , 3.5, 1. ],\n       [5.9, 3. , 4.2, 1.5],\n       [6. , 2.2, 4. , 1. ],\n       [6.1, 2.9, 4.7, 1.4],\n       [5.6, 2.9, 3.6, 1.3],\n       [6.7, 3.1, 4.4, 1.4],\n       [5.6, 3. , 4.5, 1.5],\n       [5.8, 2.7, 4.1, 1. ],\n       [6.2, 2.2, 4.5, 1.5],\n       [5.6, 2.5, 3.9, 1.1],\n       [5.9, 3.2, 4.8, 1.8],\n       [6.1, 2.8, 4. , 1.3],\n       [6.3, 2.5, 4.9, 1.5],\n       [6.1, 2.8, 4.7, 1.2],\n       [6.4, 2.9, 4.3, 1.3],\n       [6.6, 3. , 4.4, 1.4],\n       [6.8, 2.8, 4.8, 1.4],\n       [6.7, 3. , 5. , 1.7],\n       [6. , 2.9, 4.5, 1.5],\n       [5.7, 2.6, 3.5, 1. ],\n       [5.5, 2.4, 3.8, 1.1],\n       [5.5, 2.4, 3.7, 1. ],\n       [5.8, 2.7, 3.9, 1.2],\n       [6. , 2.7, 5.1, 1.6],\n       [5.4, 3. , 4.5, 1.5],\n       [6. , 3.4, 4.5, 1.6],\n       [6.7, 3.1, 4.7, 1.5],\n       [6.3, 2.3, 4.4, 1.3],\n       [5.6, 3. , 4.1, 1.3],\n       [5.5, 2.5, 4. , 1.3],\n       [5.5, 2.6, 4.4, 1.2],\n       [6.1, 3. , 4.6, 1.4],\n       [5.8, 2.6, 4. , 1.2],\n       [5. , 2.3, 3.3, 1. ],\n       [5.6, 2.7, 4.2, 1.3],\n       [5.7, 3. , 4.2, 1.2],\n       [5.7, 2.9, 4.2, 1.3],\n       [6.2, 2.9, 4.3, 1.3],\n       [5.1, 2.5, 3. , 1.1],\n       [5.7, 2.8, 4.1, 1.3],\n       [6.3, 3.3, 6. , 2.5],\n       [5.8, 2.7, 5.1, 1.9],\n       [7.1, 3. , 5.9, 2.1],\n       [6.3, 2.9, 5.6, 1.8],\n       [6.5, 3. , 5.8, 2.2],\n       [7.6, 3. , 6.6, 2.1],\n       [4.9, 2.5, 4.5, 1.7],\n       [7.3, 2.9, 6.3, 1.8],\n       [6.7, 2.5, 5.8, 1.8],\n       [7.2, 3.6, 6.1, 2.5],\n       [6.5, 3.2, 5.1, 2. ],\n       [6.4, 2.7, 5.3, 1.9],\n       [6.8, 3. , 5.5, 2.1],\n       [5.7, 2.5, 5. , 2. ],\n       [5.8, 2.8, 5.1, 2.4],\n       [6.4, 3.2, 5.3, 2.3],\n       [6.5, 3. , 5.5, 1.8],\n       [7.7, 3.8, 6.7, 2.2],\n       [7.7, 2.6, 6.9, 2.3],\n       [6. , 2.2, 5. , 1.5],\n       [6.9, 3.2, 5.7, 2.3],\n       [5.6, 2.8, 4.9, 2. ],\n       [7.7, 2.8, 6.7, 2. ],\n       [6.3, 2.7, 4.9, 1.8],\n       [6.7, 3.3, 5.7, 2.1],\n       [7.2, 3.2, 6. , 1.8],\n       [6.2, 2.8, 4.8, 1.8],\n       [6.1, 3. , 4.9, 1.8],\n       [6.4, 2.8, 5.6, 2.1],\n       [7.2, 3. , 5.8, 1.6],\n       [7.4, 2.8, 6.1, 1.9],\n       [7.9, 3.8, 6.4, 2. ],\n       [6.4, 2.8, 5.6, 2.2],\n       [6.3, 2.8, 5.1, 1.5],\n       [6.1, 2.6, 5.6, 1.4],\n       [7.7, 3. , 6.1, 2.3],\n       [6.3, 3.4, 5.6, 2.4],\n       [6.4, 3.1, 5.5, 1.8],\n       [6. , 3. , 4.8, 1.8],\n       [6.9, 3.1, 5.4, 2.1],\n       [6.7, 3.1, 5.6, 2.4],\n       [6.9, 3.1, 5.1, 2.3],\n       [5.8, 2.7, 5.1, 1.9],\n       [6.8, 3.2, 5.9, 2.3],\n       [6.7, 3.3, 5.7, 2.5],\n       [6.7, 3. , 5.2, 2.3],\n       [6.3, 2.5, 5. , 1.9],\n       [6.5, 3. , 5.2, 2. ],\n       [6.2, 3.4, 5.4, 2.3],\n       [5.9, 3. , 5.1, 1.8]])","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Normalizing","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"norm_features = (features - features.min(axis=0)) \/ (features.max(axis=0) - features.min(axis=0))\nnorm_features","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"array([[0.22222222, 0.625     , 0.06779661, 0.04166667],\n       [0.16666667, 0.41666667, 0.06779661, 0.04166667],\n       [0.11111111, 0.5       , 0.05084746, 0.04166667],\n       [0.08333333, 0.45833333, 0.08474576, 0.04166667],\n       [0.19444444, 0.66666667, 0.06779661, 0.04166667],\n       [0.30555556, 0.79166667, 0.11864407, 0.125     ],\n       [0.08333333, 0.58333333, 0.06779661, 0.08333333],\n       [0.19444444, 0.58333333, 0.08474576, 0.04166667],\n       [0.02777778, 0.375     , 0.06779661, 0.04166667],\n       [0.16666667, 0.45833333, 0.08474576, 0.        ],\n       [0.30555556, 0.70833333, 0.08474576, 0.04166667],\n       [0.13888889, 0.58333333, 0.10169492, 0.04166667],\n       [0.13888889, 0.41666667, 0.06779661, 0.        ],\n       [0.        , 0.41666667, 0.01694915, 0.        ],\n       [0.41666667, 0.83333333, 0.03389831, 0.04166667],\n       [0.38888889, 1.        , 0.08474576, 0.125     ],\n       [0.30555556, 0.79166667, 0.05084746, 0.125     ],\n       [0.22222222, 0.625     , 0.06779661, 0.08333333],\n       [0.38888889, 0.75      , 0.11864407, 0.08333333],\n       [0.22222222, 0.75      , 0.08474576, 0.08333333],\n       [0.30555556, 0.58333333, 0.11864407, 0.04166667],\n       [0.22222222, 0.70833333, 0.08474576, 0.125     ],\n       [0.08333333, 0.66666667, 0.        , 0.04166667],\n       [0.22222222, 0.54166667, 0.11864407, 0.16666667],\n       [0.13888889, 0.58333333, 0.15254237, 0.04166667],\n       [0.19444444, 0.41666667, 0.10169492, 0.04166667],\n       [0.19444444, 0.58333333, 0.10169492, 0.125     ],\n       [0.25      , 0.625     , 0.08474576, 0.04166667],\n       [0.25      , 0.58333333, 0.06779661, 0.04166667],\n       [0.11111111, 0.5       , 0.10169492, 0.04166667],\n       [0.13888889, 0.45833333, 0.10169492, 0.04166667],\n       [0.30555556, 0.58333333, 0.08474576, 0.125     ],\n       [0.25      , 0.875     , 0.08474576, 0.        ],\n       [0.33333333, 0.91666667, 0.06779661, 0.04166667],\n       [0.16666667, 0.45833333, 0.08474576, 0.        ],\n       [0.19444444, 0.5       , 0.03389831, 0.04166667],\n       [0.33333333, 0.625     , 0.05084746, 0.04166667],\n       [0.16666667, 0.45833333, 0.08474576, 0.        ],\n       [0.02777778, 0.41666667, 0.05084746, 0.04166667],\n       [0.22222222, 0.58333333, 0.08474576, 0.04166667],\n       [0.19444444, 0.625     , 0.05084746, 0.08333333],\n       [0.05555556, 0.125     , 0.05084746, 0.08333333],\n       [0.02777778, 0.5       , 0.05084746, 0.04166667],\n       [0.19444444, 0.625     , 0.10169492, 0.20833333],\n       [0.22222222, 0.75      , 0.15254237, 0.125     ],\n       [0.13888889, 0.41666667, 0.06779661, 0.08333333],\n       [0.22222222, 0.75      , 0.10169492, 0.04166667],\n       [0.08333333, 0.5       , 0.06779661, 0.04166667],\n       [0.27777778, 0.70833333, 0.08474576, 0.04166667],\n       [0.19444444, 0.54166667, 0.06779661, 0.04166667],\n       [0.75      , 0.5       , 0.62711864, 0.54166667],\n       [0.58333333, 0.5       , 0.59322034, 0.58333333],\n       [0.72222222, 0.45833333, 0.66101695, 0.58333333],\n       [0.33333333, 0.125     , 0.50847458, 0.5       ],\n       [0.61111111, 0.33333333, 0.61016949, 0.58333333],\n       [0.38888889, 0.33333333, 0.59322034, 0.5       ],\n       [0.55555556, 0.54166667, 0.62711864, 0.625     ],\n       [0.16666667, 0.16666667, 0.38983051, 0.375     ],\n       [0.63888889, 0.375     , 0.61016949, 0.5       ],\n       [0.25      , 0.29166667, 0.49152542, 0.54166667],\n       [0.19444444, 0.        , 0.42372881, 0.375     ],\n       [0.44444444, 0.41666667, 0.54237288, 0.58333333],\n       [0.47222222, 0.08333333, 0.50847458, 0.375     ],\n       [0.5       , 0.375     , 0.62711864, 0.54166667],\n       [0.36111111, 0.375     , 0.44067797, 0.5       ],\n       [0.66666667, 0.45833333, 0.57627119, 0.54166667],\n       [0.36111111, 0.41666667, 0.59322034, 0.58333333],\n       [0.41666667, 0.29166667, 0.52542373, 0.375     ],\n       [0.52777778, 0.08333333, 0.59322034, 0.58333333],\n       [0.36111111, 0.20833333, 0.49152542, 0.41666667],\n       [0.44444444, 0.5       , 0.6440678 , 0.70833333],\n       [0.5       , 0.33333333, 0.50847458, 0.5       ],\n       [0.55555556, 0.20833333, 0.66101695, 0.58333333],\n       [0.5       , 0.33333333, 0.62711864, 0.45833333],\n       [0.58333333, 0.375     , 0.55932203, 0.5       ],\n       [0.63888889, 0.41666667, 0.57627119, 0.54166667],\n       [0.69444444, 0.33333333, 0.6440678 , 0.54166667],\n       [0.66666667, 0.41666667, 0.6779661 , 0.66666667],\n       [0.47222222, 0.375     , 0.59322034, 0.58333333],\n       [0.38888889, 0.25      , 0.42372881, 0.375     ],\n       [0.33333333, 0.16666667, 0.47457627, 0.41666667],\n       [0.33333333, 0.16666667, 0.45762712, 0.375     ],\n       [0.41666667, 0.29166667, 0.49152542, 0.45833333],\n       [0.47222222, 0.29166667, 0.69491525, 0.625     ],\n       [0.30555556, 0.41666667, 0.59322034, 0.58333333],\n       [0.47222222, 0.58333333, 0.59322034, 0.625     ],\n       [0.66666667, 0.45833333, 0.62711864, 0.58333333],\n       [0.55555556, 0.125     , 0.57627119, 0.5       ],\n       [0.36111111, 0.41666667, 0.52542373, 0.5       ],\n       [0.33333333, 0.20833333, 0.50847458, 0.5       ],\n       [0.33333333, 0.25      , 0.57627119, 0.45833333],\n       [0.5       , 0.41666667, 0.61016949, 0.54166667],\n       [0.41666667, 0.25      , 0.50847458, 0.45833333],\n       [0.19444444, 0.125     , 0.38983051, 0.375     ],\n       [0.36111111, 0.29166667, 0.54237288, 0.5       ],\n       [0.38888889, 0.41666667, 0.54237288, 0.45833333],\n       [0.38888889, 0.375     , 0.54237288, 0.5       ],\n       [0.52777778, 0.375     , 0.55932203, 0.5       ],\n       [0.22222222, 0.20833333, 0.33898305, 0.41666667],\n       [0.38888889, 0.33333333, 0.52542373, 0.5       ],\n       [0.55555556, 0.54166667, 0.84745763, 1.        ],\n       [0.41666667, 0.29166667, 0.69491525, 0.75      ],\n       [0.77777778, 0.41666667, 0.83050847, 0.83333333],\n       [0.55555556, 0.375     , 0.77966102, 0.70833333],\n       [0.61111111, 0.41666667, 0.81355932, 0.875     ],\n       [0.91666667, 0.41666667, 0.94915254, 0.83333333],\n       [0.16666667, 0.20833333, 0.59322034, 0.66666667],\n       [0.83333333, 0.375     , 0.89830508, 0.70833333],\n       [0.66666667, 0.20833333, 0.81355932, 0.70833333],\n       [0.80555556, 0.66666667, 0.86440678, 1.        ],\n       [0.61111111, 0.5       , 0.69491525, 0.79166667],\n       [0.58333333, 0.29166667, 0.72881356, 0.75      ],\n       [0.69444444, 0.41666667, 0.76271186, 0.83333333],\n       [0.38888889, 0.20833333, 0.6779661 , 0.79166667],\n       [0.41666667, 0.33333333, 0.69491525, 0.95833333],\n       [0.58333333, 0.5       , 0.72881356, 0.91666667],\n       [0.61111111, 0.41666667, 0.76271186, 0.70833333],\n       [0.94444444, 0.75      , 0.96610169, 0.875     ],\n       [0.94444444, 0.25      , 1.        , 0.91666667],\n       [0.47222222, 0.08333333, 0.6779661 , 0.58333333],\n       [0.72222222, 0.5       , 0.79661017, 0.91666667],\n       [0.36111111, 0.33333333, 0.66101695, 0.79166667],\n       [0.94444444, 0.33333333, 0.96610169, 0.79166667],\n       [0.55555556, 0.29166667, 0.66101695, 0.70833333],\n       [0.66666667, 0.54166667, 0.79661017, 0.83333333],\n       [0.80555556, 0.5       , 0.84745763, 0.70833333],\n       [0.52777778, 0.33333333, 0.6440678 , 0.70833333],\n       [0.5       , 0.41666667, 0.66101695, 0.70833333],\n       [0.58333333, 0.33333333, 0.77966102, 0.83333333],\n       [0.80555556, 0.41666667, 0.81355932, 0.625     ],\n       [0.86111111, 0.33333333, 0.86440678, 0.75      ],\n       [1.        , 0.75      , 0.91525424, 0.79166667],\n       [0.58333333, 0.33333333, 0.77966102, 0.875     ],\n       [0.55555556, 0.33333333, 0.69491525, 0.58333333],\n       [0.5       , 0.25      , 0.77966102, 0.54166667],\n       [0.94444444, 0.41666667, 0.86440678, 0.91666667],\n       [0.55555556, 0.58333333, 0.77966102, 0.95833333],\n       [0.58333333, 0.45833333, 0.76271186, 0.70833333],\n       [0.47222222, 0.41666667, 0.6440678 , 0.70833333],\n       [0.72222222, 0.45833333, 0.74576271, 0.83333333],\n       [0.66666667, 0.45833333, 0.77966102, 0.95833333],\n       [0.72222222, 0.45833333, 0.69491525, 0.91666667],\n       [0.41666667, 0.29166667, 0.69491525, 0.75      ],\n       [0.69444444, 0.5       , 0.83050847, 0.91666667],\n       [0.66666667, 0.54166667, 0.79661017, 1.        ],\n       [0.66666667, 0.41666667, 0.71186441, 0.91666667],\n       [0.55555556, 0.20833333, 0.6779661 , 0.75      ],\n       [0.61111111, 0.41666667, 0.71186441, 0.79166667],\n       [0.52777778, 0.58333333, 0.74576271, 0.91666667],\n       [0.44444444, 0.41666667, 0.69491525, 0.70833333]])","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Defining fourth feature as a categorical variable","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"first_q = np.quantile(norm_features[3], 0.25)\nsecond_q = np.quantile(norm_features[3], 0.75)\n\nfc = norm_features[:,3]\nthird_feature_column = np.where(fc < first_q, \"small\", np.where(fc > second_q, \"big\", \"medium\"))\nthird_feature_column","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"array(['small', 'small', 'small', 'small', 'small', 'medium', 'medium',\n       'small', 'small', 'small', 'small', 'small', 'small', 'small',\n       'small', 'medium', 'medium', 'medium', 'medium', 'medium', 'small',\n       'medium', 'small', 'medium', 'small', 'small', 'medium', 'small',\n       'small', 'small', 'small', 'medium', 'small', 'small', 'small',\n       'small', 'small', 'small', 'small', 'small', 'medium', 'medium',\n       'small', 'big', 'medium', 'medium', 'small', 'small', 'small',\n       'small', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big', 'big',\n       'big', 'big'], dtype='<U6')","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Splitting dataset into two","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"def get_sets(f, n):\n    indices = np.random.permutation(f.shape[0])\n    train_percentage = int(f.shape[0] * 0.8)\n    training_idx, test_idx = indices[:train_percentage], indices[train_percentage:]\n\n    training_features, training_names = f[training_idx], n[training_idx]\n    test_features, test_names = f[test_idx], n[test_idx]\n    return training_features, training_names, test_features, test_names","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"tr_f, tr_n, te_f, te_n = get_sets(features, names)\nf\"{tr_f.shape[0]} rows in training set, {te_f.shape[0]} rows in testing set\"","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"'120 rows in training set, 30 rows in testing set'","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"# Part 2","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Data classification (testing classifier SVC on various selections)","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"import sklearn as sk\nfrom sklearn import svm","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"def get_stats(expected, actual):\n    wrong_predictions = [f\"Expected: {w}, actual {c}\" for w,c in dict(zip(expected, actual)).items() if w != c]\n    accuracy = (len(expected) - len(wrong_predictions)) \/ len(expected)\n    return wrong_predictions, accuracy","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"def test_classifier(clf, num_of_tests=20):\n    np.random.seed(42)\n    for i in range(num_of_tests):\n        train_f, train_n, test_f, test_n = get_sets(features, names)\n        clf = sk.base.clone(clf)\n        clf.fit(train_f, train_n)\n        wp, score = get_stats(test_n, clf.predict(test_f))\n        print(f\"Iteration: {i}\\n Wrong predictions: {wp}\\n Score: {score}\\n\")\n\ntest_classifier(svm.SVC(), 100)","outputs":[{"stdout":"Iteration: 0\n Wrong predictions: []\n Score: 1.0\n\nIteration: 1\n Wrong predictions: []\n Score: 1.0\n\nIteration: 2\n Wrong predictions: []\n Score: 1.0\n\nIteration: 3\n Wrong predictions: []\n Score: 1.0\n\nIteration: 4\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 5\n Wrong predictions: []\n Score: 1.0\n\nIteration: 6\n Wrong predictions: []\n Score: 1.0\n\nIteration: 7\n Wrong predictions: []\n Score: 1.0\n\nIteration: 8\n Wrong predictions: []\n Score: 1.0\n\nIteration: 9\n Wrong predictions: []\n Score: 1.0\n\nIteration: 10\n Wrong predictions: []\n Score: 1.0\n\nIteration: 11\n Wrong predictions: []\n Score: 1.0\n\nIteration: 12\n Wrong predictions: []\n Score: 1.0\n\nIteration: 13\n Wrong predictions: []\n Score: 1.0\n\nIteration: 14\n Wrong predictions: []\n Score: 1.0\n\nIteration: 15\n Wrong predictions: []\n Score: 1.0\n\nIteration: 16\n Wrong predictions: []\n Score: 1.0\n\nIteration: 17\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 18\n Wrong predictions: []\n Score: 1.0\n\nIteration: 19\n Wrong predictions: []\n Score: 1.0\n\nIteration: 20\n Wrong predictions: []\n Score: 1.0\n\nIteration: 21\n Wrong predictions: []\n Score: 1.0\n\nIteration: 22\n Wrong predictions: []\n Score: 1.0\n\nIteration: 23\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 24\n Wrong predictions: []\n Score: 1.0\n\nIteration: 25\n Wrong predictions: []\n Score: 1.0\n\nIteration: 26\n Wrong predictions: []\n Score: 1.0\n\nIteration: 27\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 28\n Wrong predictions: []\n Score: 1.0\n\nIteration: 29\n Wrong predictions: []\n Score: 1.0\n\nIteration: 30\n Wrong predictions: []\n Score: 1.0\n\nIteration: 31\n Wrong predictions: []\n Score: 1.0\n\nIteration: 32\n Wrong predictions: []\n Score: 1.0\n\nIteration: 33\n Wrong predictions: []\n Score: 1.0\n\nIteration: 34\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 35\n Wrong predictions: []\n Score: 1.0\n\nIteration: 36\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 37\n Wrong predictions: []\n Score: 1.0\n\nIteration: 38\n Wrong predictions: []\n Score: 1.0\n\nIteration: 39\n Wrong predictions: []\n Score: 1.0\n\nIteration: 40\n Wrong predictions: []\n Score: 1.0\n\nIteration: 41\n Wrong predictions: []\n Score: 1.0\n\nIteration: 42\n Wrong predictions: []\n Score: 1.0\n\nIteration: 43\n Wrong predictions: []\n Score: 1.0\n\nIteration: 44\n Wrong predictions: []\n Score: 1.0\n\nIteration: 45\n Wrong predictions: []\n Score: 1.0\n\nIteration: 46\n Wrong predictions: []\n Score: 1.0\n\nIteration: 47\n Wrong predictions: []\n Score: 1.0\n\nIteration: 48\n Wrong predictions: []\n Score: 1.0\n\nIteration: 49\n Wrong predictions: []\n Score: 1.0\n\nIteration: 50\n Wrong predictions: []\n Score: 1.0\n\nIteration: 51\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 52\n Wrong predictions: []\n Score: 1.0\n\nIteration: 53\n Wrong predictions: []\n Score: 1.0\n\nIteration: 54\n Wrong predictions: []\n Score: 1.0\n\nIteration: 55\n Wrong predictions: []\n Score: 1.0\n\nIteration: 56\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 57\n Wrong predictions: []\n Score: 1.0\n\nIteration: 58\n Wrong predictions: []\n Score: 1.0\n\nIteration: 59\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 60\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 61\n Wrong predictions: []\n Score: 1.0\n\nIteration: 62\n Wrong predictions: []\n Score: 1.0\n\nIteration: 63\n Wrong predictions: []\n Score: 1.0\n\nIteration: 64\n Wrong predictions: []\n Score: 1.0\n\nIteration: 65\n Wrong predictions: []\n Score: 1.0\n\nIteration: 66\n Wrong predictions: []\n Score: 1.0\n\nIteration: 67\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 68\n Wrong predictions: []\n Score: 1.0\n\nIteration: 69\n Wrong predictions: ['Expected: Iris-virginica, actual Iris-versicolor']\n Score: 0.9666666666666667\n\nIteration: 70\n Wrong predictions: []\n Score: 1.0\n\nIteration: 71\n Wrong predictions: []\n Score: 1.0\n\nIteration: 72\n Wrong predictions: []\n Score: 1.0\n\nIteration: 73\n Wrong predictions: []\n Score: 1.0\n\nIteration: 74\n Wrong predictions: []\n Score: 1.0\n\nIteration: 75\n Wrong predictions: []\n Score: 1.0\n\nIteration: 76\n Wrong predictions: []\n Score: 1.0\n\nIteration: 77\n Wrong predictions: []\n Score: 1.0\n\nIteration: 78\n Wrong predictions: []\n Score: 1.0\n\nIteration: 79\n Wrong predictions: []\n Score: 1.0\n\nIteration: 80\n Wrong predictions: []\n Score: 1.0\n\nIteration: 81\n Wrong predictions: []\n Score: 1.0\n\nIteration: 82\n Wrong predictions: []\n Score: 1.0\n\nIteration: 83\n Wrong predictions: []\n Score: 1.0\n\nIteration: 84\n Wrong predictions: []\n Score: 1.0\n\nIteration: 85\n Wrong predictions: []\n Score: 1.0\n\nIteration: 86\n Wrong predictions: []\n Score: 1.0\n\nIteration: 87\n Wrong predictions: []\n Score: 1.0\n\nIteration: 88\n Wrong predictions: []\n Score: 1.0\n\nIteration: 89\n Wrong predictions: []\n Score: 1.0\n\nIteration: 90\n Wrong predictions: []\n Score: 1.0\n\nIteration: 91\n Wrong predictions: ['Expected: Iris-versicolor, actual Iris-virginica']\n Score: 0.9666666666666667\n\nIteration: 92\n Wrong predictions: []\n Score: 1.0\n\nIteration: 93\n Wrong predictions: []\n Score: 1.0\n\nIteration: 94\n Wrong predictions: []\n Score: 1.0\n\nIteration: 95\n Wrong predictions: []\n Score: 1.0\n\nIteration: 96\n Wrong predictions: []\n Score: 1.0\n\nIteration: 97\n Wrong predictions: []\n Score: 1.0\n\nIteration: 98\n Wrong predictions: []\n Score: 1.0\n\nIteration: 99\n Wrong predictions: []\n Score: 1.0\n\n","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"**The classifier was tested on several samples of the same dataset. Average accuracy: 0.9 - 1. Most often the classifier confuses \"Iris-virginica\" and \"Iris-versicolor\".**","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Experiments with hyperparameters\n  Testing different kernels with different parameters","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"def get_average_score(clf, num_of_tests=1000, normalized=True):\n    np.random.seed(42)\n    clf = sk.base.clone(clf)\n    points = 0\n    f = norm_features if normalized else features\n    for i in range(num_of_tests):\n        train_f, train_n, test_f, test_n = get_sets(f, names)\n        clf.fit(train_f, train_n)\n        points += clf.score(test_f, test_n)\n    return points \/ num_of_tests","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"### 1. Testing rbf kernel","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel='rbf'), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9561999999999957","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel=\"rbf\"), normalized=False) ","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9608666666666629","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.7, kernel=\"rbf\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9572666666666624","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.7, kernel=\"rbf\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9564999999999957","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"rbf\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9562333333333288","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"rbf\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9549666666666619","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"**Conclusion**: Best result without normalization with higher C","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"### 2. Testing linear kernel","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel=\"linear\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9601999999999958","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel=\"linear\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9772333333333324","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"linear\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.954666666666662","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"linear\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9786333333333334","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"**Conclusion:** Best result without normalization with C near 0.5","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"### 3. Testing poly kernel","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel=\"poly\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9673666666666642","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=1, kernel=\"poly\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.964266666666664","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"poly\"), normalized=True)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9646333333333307","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"get_average_score(svm.SVC(C=0.5, kernel=\"poly\"), normalized=False)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9659999999999974","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"**Conclusion**: Best results with normalization with higher C","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"- ## Vizualizing dataset","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"from sklearn import decomposition\nimport matplotlib.pyplot as plt","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"pca = decomposition.PCA(n_components=2)\npca.fit(features)\ndec_features = pca.transform(features)\ndec_features","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"array([[-2.68420713,  0.32660731],\n       [-2.71539062, -0.16955685],\n       [-2.88981954, -0.13734561],\n       [-2.7464372 , -0.31112432],\n       [-2.72859298,  0.33392456],\n       [-2.27989736,  0.74778271],\n       [-2.82089068, -0.08210451],\n       [-2.62648199,  0.17040535],\n       [-2.88795857, -0.57079803],\n       [-2.67384469, -0.1066917 ],\n       [-2.50652679,  0.65193501],\n       [-2.61314272,  0.02152063],\n       [-2.78743398, -0.22774019],\n       [-3.22520045, -0.50327991],\n       [-2.64354322,  1.1861949 ],\n       [-2.38386932,  1.34475434],\n       [-2.6225262 ,  0.81808967],\n       [-2.64832273,  0.31913667],\n       [-2.19907796,  0.87924409],\n       [-2.58734619,  0.52047364],\n       [-2.3105317 ,  0.39786782],\n       [-2.54323491,  0.44003175],\n       [-3.21585769,  0.14161557],\n       [-2.30312854,  0.10552268],\n       [-2.35617109, -0.03120959],\n       [-2.50791723, -0.13905634],\n       [-2.469056  ,  0.13788731],\n       [-2.56239095,  0.37468456],\n       [-2.63982127,  0.31929007],\n       [-2.63284791, -0.19007583],\n       [-2.58846205, -0.19739308],\n       [-2.41007734,  0.41808001],\n       [-2.64763667,  0.81998263],\n       [-2.59715948,  1.10002193],\n       [-2.67384469, -0.1066917 ],\n       [-2.86699985,  0.0771931 ],\n       [-2.62522846,  0.60680001],\n       [-2.67384469, -0.1066917 ],\n       [-2.98184266, -0.48025005],\n       [-2.59032303,  0.23605934],\n       [-2.77013891,  0.27105942],\n       [-2.85221108, -0.93286537],\n       [-2.99829644, -0.33430757],\n       [-2.4055141 ,  0.19591726],\n       [-2.20883295,  0.44269603],\n       [-2.71566519, -0.24268148],\n       [-2.53757337,  0.51036755],\n       [-2.8403213 , -0.22057634],\n       [-2.54268576,  0.58628103],\n       [-2.70391231,  0.11501085],\n       [ 1.28479459,  0.68543919],\n       [ 0.93241075,  0.31919809],\n       [ 1.46406132,  0.50418983],\n       [ 0.18096721, -0.82560394],\n       [ 1.08713449,  0.07539039],\n       [ 0.64043675, -0.41732348],\n       [ 1.09522371,  0.28389121],\n       [-0.75146714, -1.00110751],\n       [ 1.04329778,  0.22895691],\n       [-0.01019007, -0.72057487],\n       [-0.5110862 , -1.26249195],\n       [ 0.51109806, -0.10228411],\n       [ 0.26233576, -0.5478933 ],\n       [ 0.98404455, -0.12436042],\n       [-0.174864  , -0.25181557],\n       [ 0.92757294,  0.46823621],\n       [ 0.65959279, -0.35197629],\n       [ 0.23454059, -0.33192183],\n       [ 0.94236171, -0.54182226],\n       [ 0.0432464 , -0.58148945],\n       [ 1.11624072, -0.08421401],\n       [ 0.35678657, -0.06682383],\n       [ 1.29646885, -0.32756152],\n       [ 0.92050265, -0.18239036],\n       [ 0.71400821,  0.15037915],\n       [ 0.89964086,  0.32961098],\n       [ 1.33104142,  0.24466952],\n       [ 1.55739627,  0.26739258],\n       [ 0.81245555, -0.16233157],\n       [-0.30733476, -0.36508661],\n       [-0.07034289, -0.70253793],\n       [-0.19188449, -0.67749054],\n       [ 0.13499495, -0.31170964],\n       [ 1.37873698, -0.42120514],\n       [ 0.58727485, -0.48328427],\n       [ 0.8072055 ,  0.19505396],\n       [ 1.22042897,  0.40803534],\n       [ 0.81286779, -0.370679  ],\n       [ 0.24519516, -0.26672804],\n       [ 0.16451343, -0.67966147],\n       [ 0.46303099, -0.66952655],\n       [ 0.89016045, -0.03381244],\n       [ 0.22887905, -0.40225762],\n       [-0.70708128, -1.00842476],\n       [ 0.35553304, -0.50321849],\n       [ 0.33112695, -0.21118014],\n       [ 0.37523823, -0.29162202],\n       [ 0.64169028,  0.01907118],\n       [-0.90846333, -0.75156873],\n       [ 0.29780791, -0.34701652],\n       [ 2.53172698, -0.01184224],\n       [ 1.41407223, -0.57492506],\n       [ 2.61648461,  0.34193529],\n       [ 1.97081495, -0.18112569],\n       [ 2.34975798, -0.04188255],\n       [ 3.39687992,  0.54716805],\n       [ 0.51938325, -1.19135169],\n       [ 2.9320051 ,  0.35237701],\n       [ 2.31967279, -0.24554817],\n       [ 2.91813423,  0.78038063],\n       [ 1.66193495,  0.2420384 ],\n       [ 1.80234045, -0.21615461],\n       [ 2.16537886,  0.21528028],\n       [ 1.34459422, -0.77641543],\n       [ 1.5852673 , -0.53930705],\n       [ 1.90474358,  0.11881899],\n       [ 1.94924878,  0.04073026],\n       [ 3.48876538,  1.17154454],\n       [ 3.79468686,  0.25326557],\n       [ 1.29832982, -0.76101394],\n       [ 2.42816726,  0.37678197],\n       [ 1.19809737, -0.60557896],\n       [ 3.49926548,  0.45677347],\n       [ 1.38766825, -0.20403099],\n       [ 2.27585365,  0.33338653],\n       [ 2.61419383,  0.55836695],\n       [ 1.25762518, -0.179137  ],\n       [ 1.29066965, -0.11642525],\n       [ 2.12285398, -0.21085488],\n       [ 2.3875644 ,  0.46251925],\n       [ 2.84096093,  0.37274259],\n       [ 3.2323429 ,  1.37052404],\n       [ 2.15873837, -0.21832553],\n       [ 1.4431026 , -0.14380129],\n       [ 1.77964011, -0.50146479],\n       [ 3.07652162,  0.68576444],\n       [ 2.14498686,  0.13890661],\n       [ 1.90486293,  0.04804751],\n       [ 1.16885347, -0.1645025 ],\n       [ 2.10765373,  0.37148225],\n       [ 2.31430339,  0.18260885],\n       [ 1.92245088,  0.40927118],\n       [ 1.41407223, -0.57492506],\n       [ 2.56332271,  0.2759745 ],\n       [ 2.41939122,  0.30350394],\n       [ 1.94401705,  0.18741522],\n       [ 1.52566363, -0.37502085],\n       [ 1.76404594,  0.07851919],\n       [ 1.90162908,  0.11587675],\n       [ 1.38966613, -0.28288671]])","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"np.random.seed(42)\ntrain_f, train_n, test_f, test_n = get_sets(dec_features, names)\n\nclf = svm.SVC(C=0.5, kernel=\"linear\")\nclf.fit(train_f, train_n)\nclf.score(test_f, test_n)","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"text":"0.9666666666666667","type":"text"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"colours = np.unique(test_n, return_inverse=True)[1]\nlabels = np.unique(test_n, return_inverse=True)[0].tolist()\n\nsc = plt.scatter(test_f[:,0], test_f[:,1], c=colours, edgecolors=\"k\")\nplt.title(\"Original dataset classification\")\nplt.legend(handles=sc.legend_elements()[0], labels=labels)\n\nplt.xlim([-3.5, 4])\nplt.ylim([-1.5, 1.5])\n\nplt.show()","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"image":"iVBORw0KGgoAAAANSUhEUgAAAX8AAAEICAYAAAC3Y\/QeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAAA4qUlEQVR4nO3dd3gU1frA8e+bZCGVhN4CBBQQSCB0FFQQRUCKcKUIilwERMSOgqJe5Fqw\/mwggqIiRQVpF1GQDoJ0EOkdYkJLIJCQQpLz+2OXmIQ0yCaTZN\/P8+Rh98yZOe9swrtnzsycEWMMSimlXIub1QEopZQqeJr8lVLKBWnyV0opF6TJXymlXJAmf6WUckGa\/JVSygVp8lepRORlEfnS2XVzsS0jIjfnsu5YEZnujHYLg\/zeHxHZLSJtHa9FRL4WkfMisklEbheR\/fnQZnURiRERd2dvWzmPh9UBqPwhIgOB54GbgIvAPOAlY8yFrNYxxryV2+1fT12riMg3QJgx5pXi0M6NMMY0SPO2DXAPEGiMiXWU1c1rGyJyDBhsjFnmaPME4JvX7ar8pT3\/YkhEngfeAV4A\/IFWQA3gNxEpkcU62hEo\/moAx9IkfuXKjDH6U4x+gFJADNA7Q7kvcAYY5Hg\/FpgDTMd+ZDDYUTY9zToDgONAJPAqcAy4O8360x2vgwADPAKcAM4BY9JspwWwAbgARACfASXSLDfAzVnsT01gNXAJ+M2xbtoYZwOngGhgDdDAUT4UuAIkOj6P\/znKRwOHHdvbA\/RIs62bHW1FO\/bhhzTLbnG0HwXsv\/r5ZtVOJvvRIM36p4GXM36O2e2PY1lnR8yXgL+BkY7ycsAix+cbBawF3BzLjgF3A48C8UCyI87XgbbYj1iubr8aMBc46\/idf+YovwlY4Sg7B8wAAhzLvgNSgDjHdl9M8\/fg4ahTBVjoiO0QMCRNm2OBH4Fpjv3aDTSz+v+RK\/xYHoD+OPkXCh2BpKv\/8TIs+xaY5Xg91pG07sd+BOhF+oRe3\/GfuQ1QAnjfUT+75D\/FsZ1GQAJQz7G8KfajDw9H3b3AM2niyi75bwA+BEoCdzgSRNpkOQjwcyz\/CNiRZtk3wBsZttfLkYzcgD5ALFDZsWwWMMaxzBNo4yj3AU4C\/3bsQxNHEmyQVTsZ2vTD\/qX3vGO7fkDLjJ9jLvYnArjd8bo00MTx+m1gEmBz\/NwOiGPZsTS\/s4HAujTba4sj+QPuwE7g\/xz7m3b\/b8Y+XFQSKI\/9S+mjNNtJbSPD38PV5L8amOjYZij2L5f2afY\/HvsXm7tjX\/6w+v+RK\/zosE\/xUw44Z4xJymRZhGP5VRuMMfONMSnGmLgMdR\/A3otdZ4xJBF7D\/h86O68bY+KMMTuxJ5JGAMaYrcaYP4wxScaYY8AXwJ057YiIVAeaA68aYxKMMWuA\/6WtY4yZaoy5ZIxJwJ5IGomIf1bbNMbMNsaEO\/b5B+Ag9iMTsH+51QCqGGPijTHrHOVdsA+XfO3Yh23AT47PKDe6AKeMMR84tnvJGLMxi\/iy258rQH0RKWWMOe+I42p5ZaCGMeaKMWatMeZ6J+1qgf1L8QVjTGza\/TfGHDLG\/Ob4HZzF\/mWc4+8PQESqYe9AjHJscwfwJfBwmmrrjDGLjTHJ2I8kGl1n7OoGaPIvfs4B5bIYw6\/sWH7VyWy2UyXtcmPMZeyH\/dk5leb1ZRwn\/USkjogsEpFTInIReIv0X0LZxXDepB+jPn71hYi4i8h4ETns2O4xx6Isty0iA0Rkh4hcEJELQHCa+i8CAmxyXCUzyFFeA2h5dR3Hev2BSrnYB7APpxzOqVIu9udf2HvIx0VktYjc6ih\/D\/twylIROSIio3MZV8YYj2fWaRCRCiLyvYj87YhrOrn7\/YH9dxhljLmUpuw4UDXN+4x\/N556Dir\/afIvfjZgH3LpmbZQRHyATsDyNMXZ9Q4jgMA063sBZW8wps+BfUBtY0wp4GXsSTYnEUBpR+xXVU\/zuh\/QHfuYtj\/24QbSbDvd\/olIDexDUyOAssaYAOCvq\/WNMaeMMUOMMVWAx4CJjktQTwKrjTEBaX58jTGPZ9ZOJk5iHzfPSbb7Y4zZbIzpDlQA5mMfK8dxpPC8MaYW0BV4TkTa56K9jDFWzyLpvo19Hxs6fn8Pkf73l93+hwNlRMQvTVl17OcslIU0+Rczxpho7CfzPhWRjiJiE5Eg7CcSw7AfVufGHKCriNzmuELodXKXsDPjh\/2kcoyI3AI8nkN9AIwxx4EtwOsiUkJE2mBPbmm3m4D9iMQb+xFFWqeBWmne+2BPVGcBROTf2Hv+ON73EpGrX3jnHXWTsZ9MrSMiDzs+T5uINBeRelm0k9EioJKIPCMiJUXET0RaZlIvy\/1x7H9\/EfE3xlzB\/nkmO5Z1EZGbRUTSlCdnE09mNmH\/sh0vIj4i4ikirdPEFQNcEJGq2K8iSyvL\/TfGnATWA287ttkQ+8nnGdcZn3IyTf7FkDHmXey96\/exJ4ON2Ht27R1jybnZxm7gSeB77EnhEvarhXK1fgYjsfdqL2Hvef9wHev2A1piv1LkP9ivCrlqGvYhhL+xXwXzR4Z1v8I+Rn5BROYbY\/YAH2A\/OjoNhAC\/p6nfHNgoIjHYr0552hhz1DFk0QHoi70newr7pbQlM2sn4w441r8H+xfXKeznGdplsq857c\/DwDHH0Msw7D1wgNrAMuwJegMw0RizKpPtZ8kx3t4V+8ndE9g7Cn0ci1\/HfpI7GvgZ+xVBab0NvOLY\/5GZbP5B7Ecx4djvN\/mPMea364lPOd\/VKwKUypaI+GK\/lLC2MeaoxeEopfJIe\/4qSyLSVUS8HWPu7wO7+OckpFKqCHNK8heRqSJyRkT+ymJ5WxGJdlxlsUNEXnNGuyrfdcd+qB6OfWih7w1cQqiUKoScMuwjIndgH2+cZowJzmR5W+x3I3bJc2NKKaXyzCk9f8fNN1HO2JZSSqn8V5A3UtwqIjuxDyGMdFxNcg0RGYp9vhR8fHya3nLLLQUYolJKFW1bt249Z4wpn1O9gkr+27Dfeh4jIp2x36BSO7OKxpjJwGSAZs2amS1bthRQiEopVfSJyPGcaxXQ1T7GmIvGmBjH68WATURye3u4UkopJyuQ5C8ilRx3HyIiLRzt5jRPjFJKqXzilGEfEZmFfXrYciIShv1OTBuAMWYS9tkPHxeRJOzzfuslg0opZSGnJH9jzIM5LP8M+0M4lFJFzJUrVwgLCyM+Pt7qUFQanp6eBAYGYrPZbmh9nTZVKZWtsLAw\/Pz8CAoKwjF6qyxmjCEyMpKwsDBq1qx5Q9vQ6R2UUtmKj4+nbNmymvgLERGhbNmyeToa0+SvlMqRJv7CJ6+\/E03+SinlgjT5K6UKPV9f3yyX3XbbbfnW7ltvZXw+UPGhyV8p5VTLZ66lf9DjdHDvTf+gx1k+c22+tJOcbH9Y2fr16\/Nl+6DJXymlcmX5zLX839BJnDlxDmMMZ06c4\/+GTnLaF8CqVato164d\/fr1IyQkBPjnqCAiIoI77riD0NBQgoODWbv22jZ3795NixYtCA0NpWHDhhw8eBCA6dOnp5Y\/9thjJCcnM3r0aOLi4ggNDaV\/\/\/4AfPjhhwQHBxMcHMxHH30EQGxsLPfddx+NGjUiODiYH36wP6hu3LhxNG\/enODgYIYOHUqhu7XJGFNof5o2bWqUUtbas2dPruv2qzHM3C0PXPPTr8awPMXg4+NjjDFm5cqVxtvb2xw5cuSaZe+\/\/7554403jDHGJCUlmYsXL16znREjRpjp06cbY4xJSEgwly9fNnv27DFdunQxiYmJxhhjHn\/8cfPtt9+m27YxxmzZssUEBwebmJgYc+nSJVO\/fn2zbds2M2fOHDN48ODUehcuXDDGGBMZGZla9tBDD5mFCxfm6TPITGa\/G2CLyUV+1Z6\/Usppzp7MfNaWrMpvRIsWLTK9tr158+Z8\/fXXjB07ll27duHn53dNnVtvvZW33nqLd955h+PHj+Pl5cXy5cvZunUrzZs3JzQ0lOXLl3PkyJFr1l23bh09evTAx8cHX19fevbsydq1awkJCWHZsmWMGjWKtWvX4u\/vD8DKlStp2bIlISEhrFixgt27M53I2DKa\/JVSTlO+WtnrKr8RPj4+mZbfcccdrFmzhqpVq\/Lwww8zbdo05s2bR2hoKKGhoWzZsoV+\/fqxcOFCvLy8uPfee1mxYgXGGB555BF27NjBjh072L9\/P2PHjr1m+yaLYZs6deqwdetWQkJCeOmllxg3bhzx8fEMHz6cOXPmsGvXLoYMGVLo7pDW5K+UcppBb\/WjpHeJdGUlvUsw6K1++d728ePHqVChAkOGDOHRRx9l27Zt9OjRIzWpN2vWjCNHjlCrVi2eeuopunXrxp9\/\/kn79u2ZM2cOZ86cASAqKorjx+2zIttsNq5cuQLYv1zmz5\/P5cuXiY2NZd68edx+++2Eh4fj7e3NQw89xMiRI9m2bVtqoi9XrhwxMTHMmTMn3\/f\/eun0Dkopp2nf73YApr48k7MnIylfrSyD3uqXWp6fVq1axXvvvYfNZsPX15dp06ZdU+eHH35g+vTp2Gw2KlWqxGuvvUaZMmV444036NChAykpKdhsNiZMmECNGjUYOnQoDRs2pEmTJsyYMYOBAwfSokULAAYPHkzjxo1ZsmQJL7zwAm5ubthsNj7\/\/HMCAgIYMmQIISEhBAUF0bx583zf\/+vllGf45hd9mItS1tu7dy\/16tWzOgyVicx+NyKy1RjTLKd1ted\/HU6cOMGKFSsICAigU6dOlCxZ0uqQlFLqhmjyz6WXX3qZTz76hPIeVbjilkC8+2B+XforzZrl+AWrlFKFjib\/XFi6dClffDqZpvF3UULsvf0z5m+63deNk+EncXd3tzhCpZS6Pnq1Ty58NWUq5WOrpSZ+gApSlZT4\/L21XCml8osm\/1y4HHsZd659Wo4HNuLi4iyISCml8kaTfy70frAXUT7hpJiU1LIYE0100nnatGljYWRKKXVjNPnnQt++fQluWZ+\/fDdw3BzgqMcednv9waTJn+Pt7W11eEoVe1ZN6Zwb4eHhPPDAAze0btu2bbHqcnY94ZsLNpuNX5f+wqJFi1i0cBFlypZh0KODqFu3rtWhKVXoLNi\/l\/fWryXi0iUq+\/nxwm23072u8+8TSE5Oxt3dvcDOuyUlJeHhcW3KrFKlSoHdwXt1n51Be\/655O7uTvfu3Zny1RTeefcdTfxKZWLB\/r28vHwp4ZcuYYDwS5d4eflSFuzf65Tt52VK5+joaIKCgkhJsQ\/fXr58mWrVqnHlyhUOHz5Mx44dadq0Kbfffjv79u0DYODAgTz33HO0a9eOUaNGsXr16tS5gho3bsylS5c4duwYwcHBgD05jxw5kpCQEBo2bMinn34KwPLly2ncuDEhISEMGjSIhISEa\/Zt1qxZhISEEBwczKhRo1LLfX19ee2112jZsiUbNmxwyucI2vNXSjnRe+vXEpeUlK4sLimJ99avdVrvf9OmTfz111\/XzOw5c+ZM7r33XsaMGUNycjKXL19Ot9zf359GjRqxevVq2rVrx\/\/+9z\/uvfdebDYbQ4cOZdKkSdSuXZuNGzcyfPhwVqxYAcCBAwdYtmwZ7u7udO3alQkTJtC6dWtiYmLw9PRM18bkyZM5evQo27dvx8PDg6ioKOLj4xk4cCDLly+nTp06DBgwgM8\/\/5xnnnkmdb3w8HBGjRrF1q1bKV26NB06dGD+\/Pncf\/\/9xMbGEhwczLhx45zy+V2lPX+llNNEXLp0XeU3Ii9TOvfp0yf1YSvff\/89ffr0ISYmhvXr19OrV6\/Uh7lERESkrtOrV6\/UoZbWrVvz3HPP8cknn3DhwoVrhoGWLVvGsGHDUsvLlCnD\/v37qVmzJnXq1AHgkUceYc2aNenW27x5M23btqV8+fJ4eHjQv3\/\/1Dru7u7861\/\/utGPK0ua\/JVSTlM5k4SbXfmNyMuUzt26deOXX34hKiqKrVu3ctddd5GSkkJAQEDq7J87duxg7969mbY3evRovvzyS+Li4mjVqlXq8NBVxhhE5JqynGRXx9PTM19uJNXkr5Rymhduux2vDL1hLw8PXrgt\/2f1zM2Uzr6+vrRo0YKnn36aLl264O7uTqlSpahZsyazZ88G7Il4586dmbZx+PBhQkJCGDVqFM2aNbsm+Xfo0IFJkyaR5Bj6ioqK4pZbbuHYsWMcOnQIgO+++44777wz3XotW7Zk9erVnDt3juTkZGbNmnVNHWfT5K+UcprudevxVvsOVPHzQ4Aqfn681b5Dvlztk9GqVatST8T+9NNPPP3005nW69OnD9OnT6dPnz6pZTNmzOCrr76iUaNGNGjQgAULFmS67kcffURwcDCNGjXCy8uLTp06pVs+ePBgqlevTsOGDWnUqBEzZ87E09OTr7\/+ml69ehESEoKbmxvDhg1Lt17lypV5++23adeuHY0aNaJJkyZ07949j59I9pwypbOITAW6AGeMMcGZLBfgY6AzcBkYaIzZltN2dUpnpaynUzoXXnmZ0tlZPf9vgI7ZLO8E1Hb8DAU+d1K7SimlboBTkr8xZg0QlU2V7sA0x8Pl\/wACRKSyM9pWSil1\/QpqzL8qcDLN+zBHmVJKKQsUVPKXTMoyPdkgIkNFZIuIbDl79mw+h6WUUq6poJJ\/GFAtzftAIDyzisaYycaYZsaYZuXLly+Q4JRSytUUVPJfCAwQu1ZAtDEmIqeVlFJK5Q+nJH8RmQVsAOqKSJiIPCoiw0Tk6sWsi4EjwCFgCjDcGe0qpVxDfk\/p\/Nprr7Fs2bLrWmfhwoWMHz8+2zp5me45vznlOv\/8otf5K2W9673OP+XyQoj5EFIiwK0y+D6Hm3e3PMXg6+tLTExMujJnTm+clYJoIy8Kw3X+SillT\/wXX4GUcMDY\/734ir3cCfJrSueBAwemzskfFBTEuHHjaNOmDbNnz2bx4sXccssttGnThqeeeoouXboA8M033zBixAjAPvXzU089xW233UatWrVSt5Wb6Z7HjRtH8+bNCQ4OZujQobmaC8gZdEpnpZTzxHwIxGcojLeX57H3f1V+TOmckaenJ+vWrSM+Pp7atWuzZs0aatasyYMPPphlXBEREaxbt459+\/bRrVu3a4Z7MpvuGWDEiBG89tprADz88MMsWrSIrl273tBncz2056+Ucp6ULK7jyKr8Bjh7SufMXC3ft28ftWrVSm0vu+R\/\/\/334+bmRv369Tl9+vQ1yzOb7hlg5cqVtGzZkpCQEFasWMHu3buz232n0eSvlHIetyxu3M+q\/AY4e0rn7Nq4niGYkiVLpr7ObL3MpnuOj49n+PDhzJkzh127djFkyBDi4zMeOeUPTf5KKefxfQ7wzFDo6SjPXzc6pXN2brnlFo4cOcKxY8cAUo8abkRm0z1fTfTlypUjJiamwJ4FDDrmr5RyIjfvbqSA06\/2yY1Vq1bx3nvvYbPZ8PX1Zdq0aZnW69OnD7169WLVqlU5btPLy4uJEyfSsWNHypUrR4sWLW44vsGDB3PgwAEaNmyIzWZjyJAhjBgxgiFDhhASEkJQUBDNmze\/4e1fL73UUymVLVef0jkmJgZfX1+MMTzxxBPUrl2bZ5991uqwAL3UUyml8s2UKVMIDQ2lQYMGREdH89hjj1kdklPosI9SSmXj2WefLTQ9fWfSnr9SKkeFeXjYVeX1d6LJXymVLU9PTyIjI\/ULoBAxxhAZGYmnZ8Yrq3JPh32UUtkKDAwkLCwMfb5G4eLp6UlgYOANr6\/JXymVLZvNlukdtapo02EfpZRyQZr8lVLKBWnyV0opF6TJXymlXJAmf6WUckGa\/JVSygVp8ldKKRekyV8ppVyQJv8bZIxh6tSp1K\/TgLIB5ejauSu7du2yOiyllMoVTf43aNzr\/2XUUy\/hdbAs9aNbcvDXMNrcdjv79++3OjSllMqRJv8bEBsby3vvvsctsc0oIxXxFG+qcTMV46rz5n\/fsjo8pZTKkSb\/G3DkyBG8PXzwFO905QHJ5dmySZ88ppQq\/DT534CqVasSk3iJKyYxXfklucDNtW+yKCqllMo9Tf43oEyZMvTp05tDXjuJN3H2ubXNacK9DjN6zGirw1NKqRxp8r9BX0z5gvsHdmG71yp+L7GYqMCTTJv5LbfddpvVoSl1XRISEnhpzBjKV66Mt58fXXv04ODBg1aHpfKZOOPpPCLSEfgYcAe+NMaMz7C8LbAAOOoommuMGZfTdps1a2a2bCncY+iJiYnExMRQunRpRMTqcJS6bvc\/8ABrDh3Au9O9uPv6ELtxC2bjZvbu2kWFChWsDk9dJxHZaoxpllO9PPf8RcQdmAB0AuoDD4pI\/UyqrjXGhDp+ckz8RUWJEiUoU6aMJn5VJB04cIBlK1ZQ6uF+lKhcCXc\/P0rd3Q63OrWZOGmS1eGpfOSMYZ8WwCFjzBFjTCLwPdDdCdtVSuWz3bt341szCDebLV251KzBlh07rAkqC9999x1NGtelTBlf7m5\/K2vXrrU6pCLNGcm\/KnAyzfswR1lGt4rIThH5RUQaZLUxERkqIltEZEthf2aoMYbNmzezaNEizpw5Y3U4Sl23OnXqEHviBCY5OV25CfubhvXrWRTVtSZO\/JQ3x41g\/Eux7FtbkQE9jvKvnp1Yv3691aEVWXke8xeRXsC9xpjBjvcPAy2MMU+mqVMKSDHGxIhIZ+BjY0ztnLZdmMf8w8LC6HhPRyLCTuPr7se5hNM88+wzvPHmGzoEpIqUu+69l53RF\/C5ryPuPt7EbNpC4m8r2L1zZ54eEO4sSUlJ1KhekcUzfAmpVzK1\/KuZ0Sxc0YD\/LVphYXSFT4GN+WPv6VdL8z4QCE9bwRhz0RgT43i9GLCJSDkntG2Zf93\/AImH3Ggccyd1LjalafxdfPHJFObNm2d1aEpdl4U\/\/UTP0MacfecDTrw4htoRZ1i9fHmhSPwAkZGRJCbGp0v8AO1v92bnTp1P60Y5I\/lvBmqLSE0RKQH0BRamrSAilcTRHRaRFo52I53QtiWOHDnC3j17qZZUO7WXX1I8qRxbk88+npDpOhcuXGDNmjUcOnSoIENVKke+vr5MmTSJ2IsXiY+LY\/3q1YSGhlodVqrSpUtjcOPI8SvpyjfviKd27VoWRVX05Tn5G2OSgBHAEmAv8KMxZreIDBORYY5qDwB\/ichO4BOgr3HGNaYWiY6OxtPmhZuk\/\/hKUJIL5y+kKzPGMO71cVStHMiD3R6iScOmtL2jHVFRUQUYsVI5c3Nzw5bhxG9hUKJECZ566lkGPBnNvoOJGGNYtf4yI8fGMPKFsVaHV2R5OGMjjqGcxRnKJqV5\/RnwmTPaKgyCg4NJdksi2kThL2UAe5I\/5xnBoJ4Ppas7Z84cPnnvM5rEt8UzwYsUk8LRjbt56MGHWLxkcWabV0pl8MorY\/HwsHHXAx8QfTGWGtUr8\/6HU+jUqdMNb9MYw6ZNm9i8eTPVq1enU6dOhfLLL7845Sav\/FKYT\/j++OOPDP73EColVKdksjfR3mfxrGRj09aNBAQEpNZr3bI1lzalUFH+GT9NNklsLLmUoyeO6k00Sl2HlJQU4uPj8fLyytOFFQkJCfTt050\/d27gnjs82X0ghdPnPFn621qCgoKcF7AFCvKEr0vq3bs3a9evoe3AW6neoRzPvfkUW3dsSZf4Ac6di8ST9LN\/uosHnjYvzp8\/X4ARK1X0ubm54e3tnWPij4mJYfv27Vlegv3RRx8SH7OFPWsqMPEdf1bPK82gPgm0aR1KqVJe1K0TyEcffUhKSkp+7EahoD3\/fPbkE0\/y85Rl3JQUnFoWbSI5VuYvwk+H4+HhlJE3pYqVyMhIvv32W44ePUCTJi3p27cvXl5eOa5njGH8+Dd4773xBFb25GR4HN27deXzSd+kW79xaG0+fj2eNi3\/KUtISKFCgyNsXlKd89EpPPtaDHd1eJS33novX\/Yxv2jPv5B4+ZWXiQuI5lCJPzlnIjgpB9nvvY1PJ36qiV+pTOzatYvgBjez\/Y\/x1Cr\/Ez9Mf5FmTRuQm5s+Z8yYwczvPmDrkgrsWF6WY5urEHthOc8+OzxdvStXruBZMv3Rg4eHUKKE4OfrRssmnvz0VQCffz6BixcvOnX\/CgtN\/vmscuXK7PxrB\/2f74V3C2j8QH1+W7mUPn36WB2aUoXSiCf+zdiRJfj2kwCeHlqaxTNK07bVJcaNewWwX2o9ZcoUfvzxRy5fvpxu3YkT3mX8GB9qVLOfuPXzdeOzN0sxa9b36ep2696bT766TNqRjxk\/XeKmGjYqV7R3yipX9KBaFS+OHDmS37tsCR32UUoVGtHR0VStWoHIvdWx2f7pme87mEin\/rE89PC\/+WLSBDrf7cuZc4Ydf11h3vzF3HrrrQDUqlmJX2Z4UrtWidR1jTFUCgnnz12HqFy5cmo7d7dvjXeJU3RuD1t3XmHZmhiW\/liVJg09AYiMSqZO6wgOHw6jTJkyBfgp5I0O+yilihx3d3cAEhLTd0pjL6eQnGyY\/cNk9qypxDcf+7N4RgCT3\/eid69uXLlivwGsdes2zP05\/dHA2j\/i8ff3p2LFiqll\/v7+\/L5+G8OfnsCZy\/2pUXcIbu6eHA9LIjnZcPhYIv2GX6B\/\/\/5FKvFfD+35K6UKlZ49OnJL9W38d7Q\/IkJSkqHXkPOEn63II\/86y\/B\/B6Sr36pzFO98MJt27dqxf\/9+7ryjJYP7laDjXSXZuSeRNz+6zCeffs0DDzyQbbvLly\/npdFPsX3HPvz9fRg27HH+8583ity1\/7nt+esZR6VUoTJh4td0vPdOlq6OIjTYg5W\/x1G\/QXNq1vTEy+vcNfW9vdxISEgAoG7duqzfsI0PPnib5\/\/7O0FBNzF7zmhat26dY7vt27dn0+bdJCYmYrPZiv0EjdrzV6qIS0lJwc2teI3gpqSksGzZMo4dO0bjxo1p3rw533\/\/PR+9P5xVc8tSooQ9Me\/cncDdvaM4efI03t7eOWzVNeiYv1LFmDGGD\/7v\/6hQtQoeHh7UDQnh559\/tjosp3Fzc6NDhw4MHTqU5s2bA9CrVy8Ca9xKi07nePezKJ4fe4F7ep9j4sQvNfHfAB32UaoIeuOtt\/hw6ld49+9LjSqVid67jz4DBrBw9mzuuusuq8PLF+7u7vw4+38sXbqUX39dhH\/F0mzcNJCbbrrJ6tCKJB32UaqISUxMpFylSvg\/8Ri28v88FiNm81bqhp9m7fLlFkanrKbDPkoVU5GRkSQbky7xA5SsGcT+ffssiip\/bNiwgccfH8QjA3rz448\/kpSUZHVIxYYmf6WKmHLlyuHh5kbi6fSTlsUfPkL9+vUtisr5PvjgXfr0upegcotoFbyaD94ZxgP\/uo\/kDM8bVjdGk79SFouIiGDhwoVs2bKF3AzD2mw2Xh49mpgZ3xN\/9BgpiYnE7viTuF+WMu7VVwsg4vx36tQp3nhjLOsWluWFJwJ4bIA\/a+aXJez4ZhYuXJjzBlSO9ISvUhYxxvD8iy\/y+aRJlLq5FvGnz1K9UiWWLFpElSpVsl33xZEj8fXxYfz77\/N3WBj1GzXi\/R9+4I477iig6PPXypUradfaj8Aq\/9xgZbMJA3p5sHjxPHr06GFhdMWDJn+lLDJr1iymzp5NhZdfwN3HB++UFCKWLKN3\/\/6sW7ky23VFhCeGD+eJ4cOzrVdU+fn5ERl17Vz656IMpUoFFHxAxZAO+yhlkU+++IKSd92Ju48PAOLmht89d7Ft2zbCwsIsjs5a99xzDwePprBwSUxq2aGjiUyeHseAAY9aGFnxoT1\/pSwSHX0Bdz+\/dGXi4UEJH59iO4d8bpUsWZL5C36hZ4\/OvDvhPP6l3Nmw5SLvvvshjRo1sjq8YkGTv1IW6d65M1PWrMbzppqpZfGHj1JC7HPUuLoWLVpw9FgEK1euJDY2lplt21K6dGmrwyo29CYvpSwSFRVF01YtueRfCrf69Ug5e474DRuZ+e23dOvWzerwVBGlN3kpVciVKVOGnVu2Mqb\/wzSLjqH3TTezcd06TfyqQGjPXymVb06dOsXKlSspVaoU99xzDyVKlMh5JZUn2vNXSlnqnXfepF69Wsye8SzvvPFvatWsgnbmCg894auUcrq1a9fy+YR32LWyElUq2dPM3J9j+FfP+zh85G88PDT1WE17\/kopp5s2bQojBnmmJn6Anvf5UrFcMmvWrLEwMnWVU5K\/iHQUkf0ickhERmeyXETkE8fyP0WkiTPaVUoVTnGxl\/Avde1jEP393YmNjbUgIpVRnpO\/iLgDE4BOQH3gQRHJOLVgJ6C242co8Hle21VKFV6du\/Tim++TSEr654KSA4cT2bIjhjvvvNPCyNRVzuj5twAOGWOOGGMSge+B7hnqdAemGbs\/gAARqeyEtpUq1n7++WdCmjalpJcXtevXZ\/r06VaHlCu9e\/emTIXG3N49iglTLzD2vQu07XmO99\/\/iFKlSlkdnsI5J3yrAifTvA8DWuaiTlUgIuPGRGQo9qMDqlev7oTwlCqafvnlF\/oMGIBPz+5U7tOTmOMnGf7CCyQkJPDoo4V7fhsPDw\/mzf+VBQsW8OuvCyhVKoClvw2mYcOGVoemHPJ8nb+I9ALuNcYMdrx\/GGhhjHkyTZ2fgbeNMesc75cDLxpjtma3bb3OXxV2SUlJLFq0iGUrVlCpYkUeGTCAatWqOWXboS1aEBFSH59GIall8ceOY+bMJ\/z4cUSuHVNXqiCv8w8D0v61BwLhN1BHqSIlISGBtvfcw6CRzzPz+BE+\/m0J9UJCWLp0qVO2f3DfPjxvrpWurGSN6pw7fZq4uDintKFclzOGfTYDtUWkJvA30Bfol6HOQmCEiHyPfUgo2hhzzZCPUkXJlClT2HPuLP4jhiFu9n6UR0gD+j\/yCBEnT+b5Wvagm24i8thxvBv8c\/1E4t\/hBJQtg5eXV562rVSee\/7GmCRgBLAE2Av8aIzZLSLDRGSYo9pi4AhwCJgCFKknUBw\/fpwXnn+BTvd05tVXXuXUqVNWh6QKgZk\/zcHWqkVq4gfwqn0zySVLsH379jxv\/7+vvsrl+YuIO3QYYwwJJ8OI\/X4Or4x+SYd8VJ455TY7Y8xi7Ak+bdmkNK8N8IQz2ipoW7ZsoX27uymfWBXvxFLsXzubiRM+549NG6hdu7bV4SkLlSxREnMlMV2ZMYaUxESnzGHTs2dP4hMSeOm1Vzl+5CjlK1fijZdeLrZP71IFSyd2y0HzJi24vN1QRYJSy47Lfup1qsmCRQusC0xZbubMmTzxyhj8hw3GzdMTgJjNW\/HdtJXD+\/Y5tXeelJSkUyKoXMntCV\/9a8pGYmIi23du484Mty1USqnBipUrLIpKFRZ9+\/Zl2apV\/Dj+A7wb1MOcvwCRUcxfssTpwzKa+JWz6V9UNtzd3fHwsHEp8QK+phTuYv+4EonH18cvh7VVcefm5sbUyZMZ+cwzrFmzhvLly9OlSxdKlixpdWhK5UiTfzY+n\/g5YoQdrMNgqGKCqEk9TnodYOiwIVaHpwqJ+vXrU79+xhlN1FXR0dFs2rSJ0qVL07RpUz1ZXUho8s\/C7Nmz+c9LYwm90gZf8SfBxLGLjWxwX8L9993PK6++YnWIShV6EyZ8yiuvjKZRfR8izlzBy7s8P839hZtuusnq0FyenvDNQuOQJpi\/vCgvVVLL4s1ltnmuJupCpB7aK5WDtWvX0v\/B+1jxU1lq1bBhjOHTLy\/xzZxSbN+xX48A8ok+ySuPwv4Owxf\/dGWe4g0GLl68aFFUShUdU7+awHOPeVGrhg0AEeHJwX7EXT7L1q3ZzuyiCoAm\/yw0a9aMSEl\/M1e0iaRUqVKULVvWoqiUKjrOR52jcqX0KUZEqFzBxvnz5y2KSl2lyT8Lb45\/g7+9DnOSQ8Sai5wyJzngvYN3P3gHNzf92JTKSft7ujP9pyTSDi0fPpbIn3tjadky48S\/qqBpFstCkyZNWPP7aup2rs6JSnvwb2Vj1pwZPPzww1aHpixkjOH8+fPEx8dbHUqhN2jQIE5HVqL7wPP8uPASn0yJpv0DUfz3v+N1Tv9CQE\/4KpVLy5YtY9hTTxJ2\/AQi0LtPXyZ+8gk+Pj5Wh1ZoxcbG8vXXX7Ns6XxKly3Po48+QZs2bawOq1jL7QlfTf5K5cKuXbu47Y478OnVA6\/69UiJjSVm4WJuq1KV\/82bZ3V41y0sLIyxY1\/i118W4+fnw4BHHmPkyBex2WxWh6bySK\/2UcqJPvj4Yzzb3IZ3cAPEzQ13Pz\/8evdkxcqVHD9+3Orwrsv58+e5vU1zynv\/ysqf\/PjmI1i59EMG\/ftBq0NTBUiTv1K5sO\/gQdwDq6Qrc7PZ8KlSucgl\/6+++pJbmybz5suluSmoBM1DPZn\/dWl+++1XDhw4YHV4qoBo8lcqF25r3pykA4fSlSXHxhITFka9evUsiurG7Ny+gXvuTP9f39PTjdYtfNm5c6dFUamCpslfqVx47plnSP7zLy7+toIrkZFcPniIqImT6dSxU5G7cqXmTfXYviv9ub6UFMPO3fHUrFnToqhUQdPkr1QuBAYGsmn9eu709uXiZ18QNXUaKYlXWLVtGxWrVGHu3LlWh5hrQ4YM4\/v5cUyfc5GkJMP5C8k8NeYCgdXq0LRpU6vDUwVEr\/ZR6jokJiYSGBQE7dvi06wJIkLC8RNET\/2WHZu3cPPNN+e5jYMHDzJz1izi4uLo3q0brVq1cvo8OJs2beKZp4ew88+9iAg97u\/Kx59MpkyZMk5tRxU8vdpHqXywdOlSTIA\/vs3\/mZq4ZI3qeDVrypdTv8rz9qd8+SWhzZvz6eqVTN6+lY49ejDsiSdwdietRYsWrN+wk\/Dws5w9e4Hvps\/RxO9idEpnpXIpOTmZzZs3k+wmmORkxN09dVlKKT9Onz2Xp+2fO3eOp597jrJPDcdWobx9u3fdyfcfTaBfnz7ceeededp+Zvz9\/XOupIol7fkrlQt\/\/PEHgTWD+HjqVC6dOsPJ198ibv9BAExKCuzaQ+cOHfLUxi+\/\/ILvLXVSEz+Am6cnHs0a88OcOXnatlIZac9fqRxcunSJjl3uo2SP7pQJaUAZIO7AQU5\/9S1l7+9Cyq491KtShR49euSpHZvNBknJ15RLUjI2fYavcjLt+SuVg7lz52KrUQOfkAapZV51auMbXB\/\/7bt4c8STLF+yJM8PWe\/cuTOXjxwl4fiJ1LKk6IskbN7Cw\/3752nbSmWk3QmlchAZGYkp5XdNuUfZsvS5txPDhg1zSjulSpVi1nff0fehh\/CpWwdKliB211+MfvFFmjXL8eINpa6LJn+lctC2bVv+M348KZ3vxc3x+E6TlETK7r20f3G0U9vq2rUrJ48eZf78+cTHx9P5u84EBQU5tQ2lQK\/zVypXHho4kJ\/XrsF2Wytwdydpw0ZurVePRfPm67NoVaGi1\/kr5UTTpk7l8zffolFUNMGnzvLhSy+zYM5PmvhVkZWnnr+IlAF+AIKAY0BvY8w1D+cUkWPAJSAZSMrNtxJoz18ppa5XQfX8RwPLjTG1geWO91lpZ4wJzW3iV0oplX\/ymvy7A986Xn8L3J\/H7SmllCoAeU3+FY0xEQCOfytkUc8AS0Vkq4gMzW6DIjJURLaIyJazZ8\/mMTyllFKZyfFSTxFZBlTKZNGY62intTEmXEQqAL+JyD5jzJrMKhpjJgOTwT7mfx1tKKWUyqUck78x5u6slonIaRGpbIyJEJHKwJksthHu+PeMiMwDWgCZJn+llFL5L6\/DPguBRxyvHwEWZKwgIj4i4nf1NdAB+CuP7SqllMqDvN7hOx74UUQeBU4AvQBEpArwpTGmM1ARmOe4HtoDmGmM+TWP7SqlshEVFcWsWbOIiIigTZs2dOjQATc3va1H\/UPv8FWqmNm4cSNdu3Tg7jtKcnNQMguWGCpXDWHBwqWUdExPoYovvcNXKRdkjGHgI72Z8LY30ycEMPaFsmz+tSwk7WbixIlWh6cKEU3+ShUj+\/btI+7yBXre55ta5uEhPPVoSebNnWZhZKqw0eSvVDHi5uZGcrIh42hucgq4p3nspFKa\/JVysuXLl9O6bVvKV6nCHe3bs3r16gJru06dOpQpW5Hpc2JSyxISUvhwUjy9eg8qsDhU4afJXyknWrRoEff37s3B6lXxHDKQvZUrcF+PHixdurRA2hcRpn03hzHjE+k64ALP\/ecCIe3OUq7SrQwdmu3N9crF6NU+SjlRneBgLrZuhXeDeqllsTt3UXHnX\/xZgH\/LsbGxzJs3L\/VSz1atWun00y4it1f76JO8lHKSlJQUDu7eTdDgR9KVe9Wry97pswo0Fh8fHx566KECbVMVLTrso5STuLm5Ub5KZRLDI9KVJ\/4dTqXAQIuiUipzmvyVcqJRI1\/g8px5XDljn5E28dRpLs9dwMsjR1ocmVLp6bCPUk703DPPEBcXx3vvv0+SMdjc3Hh59GiGDRtmdWhKpaMnfJXKB1euXCEyMpKyZctis9msDke5ED3hq5SFbDYblSpl9hgMpQoHHfNXSikXpMlfKaVckCZ\/pZRyQZr8lVLKBWnyV0opF6TJXymlXJAmf6WUckGa\/JVSygVp8ldKKRekyV8ppVyQJn9g+\/bt9OrZm\/p1GtCnV1927txpdUhKKZWvXD75r127ljvbtOXPBQfwPViRHXP3cfttt\/P7779bHZpSSuUbl5\/Vs2loMxJ3elBJqqWWRZjj+DR1Y+OWP\/K1baWUcrbczurp0j1\/Ywzb\/9xGBaqmK69AVbbu2GpRVEoplf9cOvmLCGUCynKZS+nKLxND2dJlLYpKKaXyX56Sv4j0EpHdIpIiIlkeZohIRxHZLyKHRGR0Xtp0tqeefpJj3ntINPEAJJh4jnnv5elnn7Y4suLNGMPMmTNp0qoV1WrVYsCgQRw9etTqsJRyGXnt+f8F9ATWZFVBRNyBCUAnoD7woIjUz2O7TjPmlTH0+ndPtniuYKffWrZ6ruDBwb0ZPXqU1aEVa+PeeIPho0cR3rA+pndPFkeE0axVK8LCwqwOTSmX4JQTviKyChhpjLnm7KyI3AqMNcbc63j\/EoAx5u2ctluQj3G8cOECJ06coEaNGvj7+xdIm67q4sWLVAoMpNzzT+NROuCf8gWL6N+oMR9\/+KF1wSlVxBWmxzhWBU6meR8GtCyAdq9LQEAAAQEBVofhEvbs2YN3xQrpEj+Arf4trFm\/3pqglHIxOSZ\/EVkGZPYw0jHGmAW5aEMyKcvycENEhgJDAapXr56LzauiJjAwkMtnzuKbeAW3Ev883Dwp4hQ1a9SwMDKlXEeOyd8Yc3ce2wgDqqV5HwiEZ9PeZGAy2Id98ti2KoQCAwNp164dG+fOx6dbF9y9vYg\/fJT4lWt48eefrQ5PKZdQEMM+m4HaIlIT+BvoC\/QrgHZVIfb9d9\/x6GOP8b83xuPh6YmPlydff\/EFrVq1sjo0pVxCnpK\/iPQAPgXKAz+LyA5jzL0iUgX40hjT2RiTJCIjgCWAOzDVGLM7z5GrIs3Pz48fZ84kOjqa8+fPU61aNdzd3a0OSymX4fLTOyilVHGi0zsopZTKkiZ\/pZRyQZr8lVLKBWnyV0opF6TJX6l8FhcXR1xcnNVhKJWOJn+l8smxY8fo2qU9Zcr4U6aMP127tOfYsWNWh6UUoMlfqXwRHx9P+7ta0ypkF2d3V+fs7uq0CtlF+7taEx8fb3V4SmnyVyo\/zJ07l5tqXOGlpwPw9nbD29uNl54O4KYaV5g7d67V4SmlyV+p\/HD48GGaNUy5prxZwxSOHDliQURKpafJX6l8EBoayorf7U8su8oYw\/J10KhRIwsjU8pOk79S+aBz584YtyoMfu48+w4msu9gIoOfOw\/uVejcubPV4SmlyV+p\/ODu7s6SpWsIqNSXjv1i6dgvloBKfVn621qdwE4VCjqxm1JKFSM6sZtSSqksafJXSikXpMlfKaVckCZ\/pZRyQZr8lVLKBWnyV0opF6TJXymlXJAmf6WUckGa\/JVSygVp8ldKKRekyV8ppVyQJn+llHJBmvyVUsoFafJXSikXpMlfKaVcUJ6Sv4j0EpHdIpIiIlnOHy0ix0Rkl4jsEBGdoF8ppSzmkcf1\/wJ6Al\/kom47Y8y5PLanlFLKCfKU\/I0xewFExDnRKKWUKhB57fnnlgGWiogBvjDGTM6qoogMBYY63saIyP58iKccUNSOQopazEUtXih6MRe1eEFjLgh1c1Mpx+QvIsuASpksGmOMWZDLYFobY8JFpALwm4jsM8asyayi44shyy8HZxCRLbl5xmVhUtRiLmrxQtGLuajFCxpzQcjtedUck78x5u68BmOMCXf8e0ZE5gEtgEyTv1JKqfyX75d6ioiPiPhdfQ10wH6iWCmllEXyeqlnDxEJA24FfhaRJY7yKiKy2FGtIrBORHYCm4CfjTG\/5qVdJ8jXYaV8UtRiLmrxQtGLuajFCxpzQchVvGKMye9AlFJKFTJ6h69SSrkgTf5KKeWCXDb5i8h\/ReRPx5QTS0WkitUxZUdE3hORfY6Y54lIgNUx5SS3039YTUQ6ish+ETkkIqOtjicnIjJVRM6ISJG5cEJEqonIShHZ6\/ibeNrqmLIjIp4isklEdjrifd3qmHJLRNxFZLuILMqunssmf+A9Y0xDY0wosAh4zeJ4cvIbEGyMaQgcAF6yOJ7cuDr9R6G9rFdE3IEJQCegPvCgiNS3NqocfQN0tDqI65QEPG+MqQe0Ap4o5J9zAnCXMaYREAp0FJFW1oaUa08De3Oq5LLJ3xhzMc1bH+x3IRdaxpilxpgkx9s\/gEAr48kNY8xeY0x+3KHtTC2AQ8aYI8aYROB7oLvFMWXLcYNklNVxXA9jTIQxZpvj9SXsyamqtVFlzdjFON7aHD+FOkcAiEggcB\/wZU51XTb5A4jImyJyEuhP4e\/5pzUI+MXqIIqJqsDJNO\/DKMRJqTgQkSCgMbDR4lCy5Rg+2QGcAX4zxhTqeB0+Al4EUnKqWKyTv4gsE5G\/MvnpDmCMGWOMqQbMAEZYG23O8TrqjMF+CD3Dukj\/kZuYC7nMZiUs9D28okpEfIGfgGcyHH0XOsaYZMewcCDQQkSCLQ4pWyLSBThjjNmam\/oFNbGbJa5jaoqZwM\/Af\/IxnBzlFK+IPAJ0AdqbQnKDhjOm\/7BYGFAtzftAINyiWIo1EbFhT\/wzjDFzrY4nt4wxF0RkFfbzLIX5JHtroJuIdAY8gVIiMt0Y81BmlYt1zz87IlI7zdtuwD6rYskNEekIjAK6GWMuWx1PMbIZqC0iNUWkBNAXWGhxTMWO2Od9\/wrYa4z50Op4ciIi5a9eUSciXsDdFPIcYYx5yRgTaIwJwv53vCKrxA8unPyB8Y7hiT+xzzdUqC89Az4D\/LDPirpDRCZZHVBOspr+ozBxnEQfASzBfhLyR2PMbmujyp6IzAI2AHVFJExEHrU6plxoDTwM3OX4+93h6KEWVpWBlY78sBn7mH+2l04WNTq9g1JKuSBX7vkrpZTL0uSvlFIuSJO\/Ukq5IE3+SinlgjT5K6WUC9Lkr5RSLkiTv1JKuaD\/B5zwzNolZyswAAAAAElFTkSuQmCC\n","width":0,"height":0,"type":"plot"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false},{"type":"MD","text":"**Now it's clear why classifier confuses iris-versicolor and iris-virginica. Let's see how classifieir predicts labels for such data**","outputs":[],"language":"MARKDOWN","inputCollapsed":false,"outputCollapsed":false},{"type":"CODE","text":"predicted = np.unique(clf.predict(test_f), return_inverse=True)[1]\n\npr_sc = plt.scatter(test_f[:,0], test_f[:,1], c=predicted, edgecolors=\"k\")\nplt.title(\"Predicted values classification\")\nplt.legend(handles=pr_sc.legend_elements()[0], labels=labels)\n\nplt.xlim([-3.5, 4])\nplt.ylim([-1.5, 1.5])\nplt.show()","outputs":[{"stdout":"","stderr":"","outputReprs":[],"displayData":[{"image":"iVBORw0KGgoAAAANSUhEUgAAAX8AAAEICAYAAAC3Y\/QeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8vihELAAAACXBIWXMAAAsTAAALEwEAmpwYAAA4eUlEQVR4nO3dd3iUVfbA8e9JMpAKobcAAQUEEggdBQVEaSIIK0VRZBGQRda2Fizrsogu1p8NRVFsCCpIW0RBOi4qHZHeJYKUBAIJKSQ5vz9miAmkQSaZhDmf55mHmTt37j0zE87c977ve19RVYwxxngXH08HYIwxpuhZ8jfGGC9kyd8YY7yQJX9jjPFClvyNMcYLWfI3xhgvZMnf5JuIfCwi4133rxeRnUXUr4rI1W5uM9zVrp87271chfEeM7U9SEQWZXrcTkR2i0i8iNwmIt+KyD2F0O8kEfmnu9s17mHJ\/wojIgdEJNH1H\/uoiHwkIsHu7kdVV6lqg3zEM0REfnB3\/yb\/VPVzVe2SqWgc8LaqBqvqHFXtrqqfFKSP7L5nVR2pqs8VpF1TeCz5X5luVdVgoDnQCnjmwgrFZcRrPKI2sNXTQRjPsuR\/BVPV34FvgQjImFq4X0R2A7tdZT1FZJOInBKR1SLS5PzrRaSZiGwQkTMi8iXgn+m5jiISnelxTRGZJSLHRSRGRN4WkYbAJOBa15bIKVfd0iLyioj85to6mSQiAZnaekxEjojIYREZmtP7E5GBIrLugrKHRWSe6\/4tIrJRRE6LyCERGZtLWwdE5KZMj8eKyNRMj9u6Pp9TIrJZRDpmem6IiOxzfU77RWRQDn34ishTIrLXVXe9iNTMpl6OcYuIv4hMdX3Gp0RkrYhUyS2OzKNyEdkL1AX+6\/pOSovIchEZlqmP4SKy3dXONhFp7iofkyn2bSLSx1We0\/ecMU2Yqd09IhIrIvNEpHqm51RERrqmo06KyEQRkZy+L+MGqmq3K+gGHABuct2viXOE95zrsQLfA+WBAJxbBseANoAvcI\/r9aWBUsBB4GHAAdwOnAPGu9rqCES77vsCm4H\/A4Jw\/ki0dz03BPjhghhfB+a54ggB\/gv8x\/VcN+Aozh+sIGCaK+6rs3mvgcAZoF6msrXAwEwxRuIc5DRxtXub67lwV7t+F35ursdjgamu+zWAGKCHq62bXY8ruWI8DTRw1a0GNM7hu3kM2AI0AARoClTI9N1cnY+473N9XoGuz70FUCa3OC78DrJ5r8uBYa77\/YDfcW4xCnA1UDvTc9VdcQ0AEoBquXzPH\/Pn38uNwAmcf3OlgbeAlZnqKjAfCAVqAceBbp7+\/3Ql32zkf2Wa4xp9\/QCsAF7I9Nx\/VDVWVROB4cB7qvqzqqapc943GWjrujmA11X1nKrOxJlYs9MaZ1J4TFUTVDVJVbOd53eN5oYDD7viOOOKb6CrSn\/gI1X9VVUTcCbhbKnqWWAucIer7XrANTh\/WFDV5aq6RVXTVfUXYDrQIaf2cnEXsEBVF7ja+h5Yh\/PHACAdiBCRAFU9oqo5TakMA55R1Z3qtFlVY7J5X7nFfQ6ogPOHIk1V16vq6UuMIzfDgJdUda0rxj2qetAV1wxVPeyK60ucW4+t89nuIGCKqm5Q1WTgSZxbCuGZ6kxQ1VOq+huwDIi6jPhNPlnyvzLdpqqhqlpbVUe5Ev15hzLdrw38wzV9cMr1g1ETZyKvDvyuqplX\/juYQ381gYOqmpqP2CrhHLWuz9Tnd65yXP1mjjGnPs+bhiv5A3cCc1w\/CohIGxFZ5pqKigNGAhXzEeOFagP9Lvic2uMc9SbgHAWPBI6IyDcick0O7dQE9ubVWR5xfwYsBL5wTYu9JCKOS4wjNznGKCKD5c8pwlM4t87y+3lWJ9N3qarxOLeeamSq80em+2cBtx+oYP5kyd\/7ZE7mh4DnXT8U52+BqjodOALUuGDetVYObR4Cakn2O5EvXDb2BJCIc0rifJ9l1bmDGle\/mefBc+rzvEVARRGJwvkjMC3Tc9NwbgXUVNWyOOelc5pHTsD5o3Re1Uz3DwGfXfA5BanqBABVXaiqN+OcatkBTM6hj0PAVXm8n1zjdm2F\/VtVGwHXAT2BwZcYR26yjVFEarvaG41zqioU+JU\/P8+8lgc+jPNH9Hx7QTi3YH6\/jBiNG1jy926TgZGukaaISJBrZ2MI8COQCjwgIn4i0pecN\/HX4EzaE1xt+ItIO9dzR4EwESkFoKrprn7\/T0QqA4hIDRHp6qr\/FTBERBqJSCDwr9zegGtrYybwMs59CN9nejoEiFXVJBFpjXPLICebgIEi4hCRljj3cZw3FbhVRLq6dtr6i3OHd5iIVBGRXq5klgzEA2k59PEB8JyI1HN93k1EpEI29XKMW0Q6iUikiPjinOM\/B6RdYhy5+QB4VERauGK82pX4g3Am+OOuOP6K60AClyzfczamAX8VkSgRKY1zqu9nVT1wGTEaN7Dk78VUdR3O+fe3gZPAHpw77lDVFKCv6\/FJnFMKs3JoJw24FefOwd+AaFd9gKU4dzr\/ISInXGVPuPr6SUROA4tx7gRFVb\/FuUN4qavO0ny8lWnATcCMC6aeRgHjROQM8CzOH5ac\/BPniPck8G8ybUGo6iGgN\/AUzuR3COfOWx\/X7R84R7axOOfmR+XQx2uuGBbhTNwf4tzxfqHc4q6K88fuNLAd5z6dqZcYR45UdQbwPM73fwaYA5RX1W3AqzgHBUdx7pD+X6aXZvc9Z253Cc7P+GucA4Wr+HM\/j\/EAyTqla4wxxhvYyN8YY7yQW5K\/iEwRkWMi8msOz3cUkTjXkQKbRORZd\/RrjDHm8rjrFP+Pcc4bf5pLnVWq2tNN\/RljjCkAt4z8VXUlzp1MxhhjSoCiXNzrWhHZjPNohEdzOvtQREYAIwCCgoJaXHPN5ZynYowx3mn9+vUnVLVSXvWKKvlvwLk+SLyI9MB5+Fi97Cqq6vvA+wAtW7bUdevWZVfNGGNMNkQkr7PigSI62kdVT7tO50ZVFwAOEbmc0+yNMca4QZEkfxGpen6ZANcZiz441\/UwxhjjAW6Z9hGR6TiXoa0ozjXe\/4VzRUhUdRLOU+X\/JiKpONd1Gah2dpkxxniMW5K\/qt6Rx\/Nv4zwU1BhTwpw7d47o6GiSkpI8HYrJxN\/fn7CwMBwOx2W93i7lZ4zJVXR0NCEhIYSHh2MX1yoeVJWYmBiio6OpU6fOZbVhyzsYY3KVlJREhQoVLPEXIyJChQoVCrQ1ZsnfGJMnS\/zFT0G\/E0v+xhjjhSz5G2OKveDgnK\/oeN111xVavy+88ELelUooS\/7GGLdaMm0Vg8L\/Rhff\/gwK\/xtLpq0qlH7S0pwXKlu9enWhtA+W\/I0xJl+WTFvF\/42YxLHfTqCqHPvtBP83YpLbfgCWL19Op06duPPOO4mMjAT+3Co4cuQIN9xwA1FRUURERLBq1cV9bt26ldatWxMVFUWTJk3YvXs3AFOnTs0ov++++0hLS2PMmDEkJiYSFRXFoEGDAHjttdeIiIggIiKC119\/HYCEhARuueUWmjZtSkREBF9++SUA48aNo1WrVkRERDBixAiK3alNqlpsby1atFBjjGdt27Yt33XvrD1Sb5LbL7rdWXtkgWIICgpSVdVly5ZpYGCg7tu376LnXnnlFR0\/fryqqqampurp06cvamf06NE6depUVVVNTk7Ws2fP6rZt27Rnz56akpKiqqp\/+9vf9JNPPsnStqrqunXrNCIiQuPj4\/XMmTPaqFEj3bBhg86cOVOHDRuWUe\/UqVOqqhoTE5NRdtddd+m8efMK9BlkJ7vvBlin+civNvI3xrjN8UPZr9qSU\/nlaN26dbbHtrdq1YqPPvqIsWPHsmXLFkJCQi6qc+211\/LCCy\/w4osvcvDgQQICAliyZAnr16+nVatWREVFsWTJEvbt23fRa3\/44Qf69OlDUFAQwcHB9O3bl1WrVhEZGcnixYt54oknWLVqFWXLlgVg2bJltGnThsjISJYuXcrWrdkuZOwxlvyNMW5TqWaFSyq\/HEFBQdmW33DDDaxcuZIaNWpw99138+mnnzJ79myioqKIiopi3bp13HnnncybN4+AgAC6du3K0qVLUVXuueceNm3axKZNm9i5cydjx469qH3NYdqmfv36rF+\/nsjISJ588knGjRtHUlISo0aNYubMmWzZsoXhw4cXuzOkLfkbY9xm6At3UjqwVJay0oGlGPrCnYXe98GDB6lcuTLDhw\/n3nvvZcOGDfTp0ycjqbds2ZJ9+\/ZRt25dHnjgAXr16sUvv\/xC586dmTlzJseOHQMgNjaWgwedqyI7HA7OnTsHOH9c5syZw9mzZ0lISGD27Nlcf\/31HD58mMDAQO666y4effRRNmzYkJHoK1asSHx8PDNnziz093+pbHkHY4zbdL7zegCmPDWN44diqFSzAkNfuDOjvDAtX76cl19+GYfDQXBwMJ9+evFVZb\/88kumTp2Kw+GgatWqPPvss5QvX57x48fTpUsX0tPTcTgcTJw4kdq1azNixAiaNGlC8+bN+fzzzxkyZAitW7cGYNiwYTRr1oyFCxfy2GOP4ePjg8Ph4N133yU0NJThw4cTGRlJeHg4rVq1KvT3f6kkp02Z4sAu5mKM523fvp2GDRt6OgyTjey+GxFZr6ot83qtjfwvwW+\/\/cbSpUsJDQ2le\/fulC5d2tMhGWPMZbHkn09PPfkUb77+JpX8qnPOJ5kk32F8t+g7WrbM8wfWGGOKHUv++bBo0SLee+t9WiTdSClxjvaP6e\/0uqUXhw4fwtfX18MRGmPMpbGjffLhw8lTqJRQMyPxA1SWGqQnFe6p5cYYU1gs+efD2YSz+HLx1XL8cJCYmOiBiIwxpmAs+edD\/zv6ERt0mHRNzyiL1zjiUk\/Svn17D0ZmjDGXx5J\/PgwcOJCINo34NfhHDuou9vttY2vAT0x6\/10CAwM9HZ4xVzxPLemcH4cPH+b222+\/rNd27NgRTx3Objt888HhcPDdom+ZP38+8+fNp3yF8gy9dygNGjTwdGjGFDtzd27n5dWrOHLmDNVCQnjsuuvp3cD95wmkpaXh6+tbZPvdUlNT8fO7OGVWr169yM7gPf+e3cFG\/vnk6+tL7969mfzhZF586UVL\/MZkY+7O7Ty1ZBGHz5xBgcNnzvDUkkXM3bndLe0XZEnnuLg4wsPDSU93Tt+ePXuWmjVrcu7cOfbu3Uu3bt1o0aIF119\/PTt27ABgyJAhPPLII3Tq1IknnniCFStWZKwV1KxZM86cOcOBAweIiIgAnMn50UcfJTIykiZNmvDWW28BsGTJEpo1a0ZkZCRDhw4lOTn5ovc2ffp0IiMjiYiI4IknnsgoDw4O5tlnn6VNmzb8+OOPbvkcwUb+xhg3enn1KhJTU7OUJaam8vLqVW4b\/a9Zs4Zff\/31opU9p02bRteuXXn66adJS0vj7NmzWZ4vW7YsTZs2ZcWKFXTq1In\/\/ve\/dO3aFYfDwYgRI5g0aRL16tXj559\/ZtSoUSxduhSAXbt2sXjxYnx9fbn11luZOHEi7dq1Iz4+Hn9\/\/yx9vP\/+++zfv5+NGzfi5+dHbGwsSUlJDBkyhCVLllC\/fn0GDx7Mu+++y0MPPZTxusOHD\/PEE0+wfv16ypUrR5cuXZgzZw633XYbCQkJREREMG7cOLd8fufZyN8Y4zZHzpy5pPLLUZAlnQcMGJBxsZUvvviCAQMGEB8fz+rVq+nXr1\/GxVyOHDmS8Zp+\/fplTLW0a9eORx55hDfffJNTp05dNA20ePFiRo4cmVFevnx5du7cSZ06dahfvz4A99xzDytXrszyurVr19KxY0cqVaqEn58fgwYNyqjj6+vLX\/7yl8v9uHJkyd8Y4zbVskm4uZVfjoIs6dyrVy++\/fZbYmNjWb9+PTfeeCPp6emEhoZmrP65adMmtm\/fnm1\/Y8aM4YMPPiAxMZG2bdtmTA+dp6qIyEVlecmtjr+\/f6GcSGrJ3xjjNo9ddz0BF4yGA\/z8eOy6wl\/VMz9LOgcHB9O6dWsefPBBevbsia+vL2XKlKFOnTrMmDEDcCbizZs3Z9vH3r17iYyM5IknnqBly5YXJf8uXbowadIkUl1TX7GxsVxzzTUcOHCAPXv2APDZZ5\/RoUOHLK9r06YNK1as4MSJE6SlpTF9+vSL6ribJX9jjNv0btCQFzp3oXpICAJUDwnhhc5dCuVonwstX748Y0fs119\/zYMPPphtvQEDBjB16lQGDBiQUfb555\/z4Ycf0rRpUxo3bszcuXOzfe3rr79OREQETZs2JSAggO7du2d5ftiwYdSqVYsmTZrQtGlTpk2bhr+\/Px999BH9+vUjMjISHx8fRo4cmeV11apV4z\/\/+Q+dOnWiadOmNG\/enN69exfwE8mdW5Z0FpEpQE\/gmKpGZPO8AG8APYCzwBBV3ZBXu7akszGeZ0s6F18FWdLZXSP\/j4FuuTzfHajnuo0A3nVTv8YYYy6DW5K\/qq4EYnOp0hv41HVx+Z+AUBGp5o6+jTHGXLqimvOvARzK9DjaVWaMMcYDiir5SzZl2e5sEJERIrJORNYdP368kMMyxhjvVFTJPxqomelxGHA4u4qq+r6qtlTVlpUqVSqS4IwxxtsUVfKfBwwWp7ZAnKoeyetFxhhjCodbkr+ITAd+BBqISLSI3CsiI0Xk\/MGsC4B9wB5gMjDKHf0aY7xDYS\/p\/Oyzz7J48eJLes28efOYMGFCrnUKstxzYXPLcf6FxY7zN8bzLvU4\/\/Sz8yD+NUg\/Aj7VIPgRfAJ7FSiG4OBg4uPjs5S5c3njnBRFHwVRHI7zN8YYZ+I\/\/QykHwbU+e\/pZ5zlblBYSzoPGTIkY03+8PBwxo0bR\/v27ZkxYwYLFizgmmuuoX379jzwwAP07NkTgI8\/\/pjRo0cDzqWfH3jgAa677jrq1q2b0VZ+lnseN24crVq1IiIighEjRuRrLSB3sCWdjTHuE\/8akHRBYZKzvICj\/\/MKY0nnC\/n7+\/PDDz+QlJREvXr1WLlyJXXq1OGOO+7IMa4jR47www8\/sGPHDnr16nXRdE92yz0DjB49mmeffRaAu+++m\/nz53Prrbde1mdzKWzkb4xxn\/QcjuPIqfwyuHtJ5+ycL9+xYwd169bN6C+35H\/bbbfh4+NDo0aNOHr06EXPZ7fcM8CyZcto06YNkZGRLF26lK1bt+b29t3Gkr8xxn18cjhxP6fyy+DuJZ1z6+NSpmBKly6dcT+712W33HNSUhKjRo1i5syZbNmyheHDh5OUdOGWU+Gw5G+McZ\/gRwD\/Cwr9XeWF63KXdM7NNddcw759+zhw4ABAxlbD5chuuefzib5ixYrEx8cX2bWAweb8jTFu5BPYi3Rw+9E++bF8+XJefvllHA4HwcHBfPrpp9nWGzBgAP369WP58uV5thkQEMA777xDt27dqFixIq1bt77s+IYNG8auXbto0qQJDoeD4cOHM3r0aIYPH05kZCTh4eG0atXqstu\/VHaopzEmV96+pHN8fDzBwcGoKvfffz\/16tXj4Ycf9nRYgB3qaYwxhWby5MlERUXRuHFj4uLiuO+++zwdklvYtI8xxuTi4YcfLjYjfXeykb8xJk\/FeXrYWxX0O7Hkb4zJlb+\/PzExMfYDUIyoKjExMfj7X3hkVf7ZtI8xJldhYWFER0dj19coXvz9\/QkLC7vs11vyN8bkyuFwZHtGrSnZbNrHGGO8kCV\/Y4zxQpb8jTHGC1nyN8YYL2TJ3xhjvJAlf2OM8UKW\/I0xxgtZ8jfGGC9kyf8yqSpTpkyhUf3GVAityK09bmXLli2eDssYY\/LFkv9lGvfv53jigScJ2F2BRnFt2P1dNO2vu56dO3d6OjRjjMmTJf\/LkJCQwMsvvcw1CS0pL1Xwl0BqcjVVEmvx\/HMveDo8Y4zJkyX\/y7Bv3z4C\/YLwl8As5aFplVi3xq48Zowp\/iz5X4YaNWoQn3KGc5qSpfyMnOLqeld5KCpjjMk\/S\/6XoXz58gwY0J89AZtJ0kTn2tp6lMMBexnz9BhPh2eMMXmy5H+Z3pv8HrcN6cnGgOX8r9QCYsMO8em0T7juuus8HZoxlyQ5OZknn36aStWqERgSwq19+rB7925Ph2UKmbjj6jwi0g14A\/AFPlDVCRc83xGYC+x3Fc1S1XF5tduyZUtdt654z6GnpKQQHx9PuXLlEBFPh2PMJbvt9ttZuWcXgd274hscRMLP69Cf17J9yxYqV67s6fDMJRKR9araMq96BR75i4gvMBHoDjQC7hCRRtlUXaWqUa5bnom\/pChVqhTly5e3xG9KpF27drF46VLK3H0npapVxTckhDI3dcKnfj3emTTJ0+GZQuSOaZ\/WwB5V3aeqKcAXQG83tGuMKWRbt24luE44Pg5HlnKpU5t1mzZ5JqgcfPbZZzRv1oDy5YO5qfO1rFq1ytMhlWjuSP41gEOZHke7yi50rYhsFpFvRaRxTo2JyAgRWSci64r7NUNVlbVr1zJ\/\/nyOHTvm6XCMuWT169cn4bff0LS0LOUa\/TtNGjX0UFQXe+edt3h+3GgmPJnAjlVVGNxnP3\/p253Vq1d7OrQSq8Bz\/iLSD+iqqsNcj+8GWqvq3zPVKQOkq2q8iPQA3lDVenm1XZzn\/KOjo+l2czeORB8l2DeEE8lHeejhhxj\/\/HibAjIlyo1du7I57hRBt3TDNyiQ+DXrSPl+KVs3by7QBcLdJTU1ldq1qrDg82AiG5bOKP9wWhzzljbmv\/OXejC64qfI5vxxjvRrZnocBhzOXEFVT6tqvOv+AsAhIhXd0LfH\/OW220nZ40Oz+A7UP92CFkk38t6bk5k9e7anQzPmksz7+mv6RjXj+Iuv8tvjT1PvyDFWLFlSLBI\/QExMDCkpSVkSP0Dn6wPZvNnW07pc7kj+a4F6IlJHREoBA4F5mSuISFVxDYdFpLWr3xg39O0R+\/btY\/u27dRMrZcxyi8t\/lRLqMPbb0zM9jWnTp1i5cqV7NmzpyhDNSZPwcHBTJ40iYTTp0lKTGT1ihVERUV5OqwM5cqVQ\/Fh38FzWcrXbkqiXr26Hoqq5Ctw8lfVVGA0sBDYDnylqltFZKSIjHRVux34VUQ2A28CA9Udx5h6SFxcHP6OAHwk68dXitKcOnkqS5mqMu7f46hRLYw7et1F8yYt6HhDJ2JjY4swYmPy5uPjg+OCHb\/FQalSpXjggYcZ\/Pc4duxOQVVZvvosj46N59HHxno6vBLLzx2NuKZyFlxQNinT\/beBt93RV3EQERFBmk8qcRpLWSkPOJP8Cf8jDO17V5a6M2fO5M2X36Z5Ukf8kwNI13T2\/7yVu+64iwULF2TXvDHmAs88MxY\/Pwc33v4qcacTqF2rGq+8Npnu3btfdpuqypo1a1i7di21atWie\/fuxfLHr7C45SSvwlKcd\/h+9dVXDPvrcKom16J0WiBxgcfxr+pgzfqfCQ0NzajXrk07zqxJp4r8OX+apqn8XHoR+3\/bbyfRGHMJ0tPTSUpKIiAgoEAHViQnJzNwQG9+2fwjN9\/gz9Zd6Rw94c+i71cRHh7uvoA9oCh3+Hql\/v37s2r1SjoOuZZaXSryyPMPsH7TuiyJH+DEiRj8ybr6p6\/44e8I4OTJk0UYsTEln4+PD4GBgXkm\/vj4eDZu3JjjIdivv\/4aSfHr2LayMu+8WJYVs8sxdEAy7dtFUaZMAA3qh\/H666+Rnp5eGG+jWLCRfyH7+\/1\/55vJi7kqNSKjLE5jOFD+Vw4fPYyfn1tm3oy5osTExPDJJ5+wf\/8umjdvw8CBAwkICMjzdarKhAnjefnlCYRV8+fQ4UR697qVdyd9nOX1zaLq8ca\/k2jf5s+y5OR0Kjfex9qFtTgZl87Dz8ZzY5d7eeGFlwvlPRYWG\/kXE0898xSJoXHsKfULJ\/QIh2Q3OwM38NY7b1niNyYbW7ZsIaLx1Wz8aQJ1K33Nl1Mfp2WLxuTnpM\/PP\/+caZ+9yvqFldm0pAIH1lYn4dQSHn54VJZ6586dw7901q0HPz+hVCkhJNiHNs39+frDUN59dyKnT5926\/srLiz5F7Jq1aqx+ddNDPpHPwJbQ7PbG\/H9skUMGDDA06EZUyyNvv+vjH20FJ+8GcqDI8qx4PNydGx7hnHjngGch1pPnjyZr776irNnz2Z57TsTX2LC00HUrunccRsS7MPbz5dh+vQvstTt1bs\/b354lswzH59\/fYarajuoVsU5KKtWxY+a1QPYt29fYb9lj7BpH2NMsREXF0eNGpWJ2V4Lh+PPkfmO3Sl0H5TAXXf\/lfcmTaTHTcEcO6Fs+vUcs+cs4NprrwWgbp2qfPu5P\/Xqlsp4rapSNfIwv2zZQ7Vq1TL6ualzOwJL\/UGPzrB+8zkWr4xn0Vc1aN7EH4CY2DTqtzvC3r3RlC9fvgg\/hYKxaR9jTInj6+sLQHJK1kFpwtl00tKUGV++z7aVVfn4jbIs+DyU918JoH+\/Xpw75zwBrF279sz6JuvWwKqfkihbtixVqlTJKCtbtiz\/W72BUQ9O5NjZQdRuMBwfX38ORqeSlqbsPZDCnaNOMWjQoBKV+C+FjfyNMcVK3z7duKbWBp4bUxYRITVV6Tf8JIePV+Gevxxn1F9Ds9Rv2yOWF1+dQadOndi5cycdbmjDsDtL0e3G0mzelsLzr5\/lzbc+4vbbb8+13yVLlvDkmAfYuGkHZcsGMXLk3\/jXv8aXuGP\/8zvytz2OxphiZeI7H9GtawcWrYglKsKPZf9LpFHjVtSp409AwImL6gcG+JCcnAxAgwYNWP3jBl599T\/847n\/ER5+FTNmjqFdu3Z59tu5c2fWrN1KSkoKDofjil+g0Ub+xpRw6enp+PhcWTO46enpLF68mAMHDtCsWTNatWrFF198weuvjGL5rAqUKuVMzJu3JnNT\/1gOHTpKYGBgHq16B5vzN+YKpqq8+n\/\/R+Ua1fHz86NBZCTffPONp8NyGx8fH7p06cKIESNo1aoVAP369SOs9rW07n6Cl96O5R9jT3Fz\/xO8884Hlvgvg037GFMCjX\/hBV6b8iGBgwZSu3o14rbvYMDgwcybMYMbb7zR0+EVCl9fX76a8V8WLVrEd9\/Np2yVcvy8ZghXXXWVp0MrkWzax5gSJiUlhYpVq1L2\/vtwVPrzshjxa9fT4PBRVi1Z4sHojKfZtI8xV6iYmBjSVLMkfoDSdcLZuWOHh6IqHD\/++CN\/+9tQ7hncn6+++orU1FRPh3TFsORvTAlTsWJF\/Hx8SDmaddGypL37aNSokYeicr9XX32JAf26El5xPm0jVvDqiyO5\/S+3kHbB9YbN5bHkb4yHHTlyhHnz5rFu3TryMw3rcDh4aswY4j\/\/gqT9B0hPSSFh0y8kfruIcf\/8ZxFEXPj++OMPxo8fyw\/zKvDY\/aHcN7gsK+dUIPrgWubNm5d3AyZPtsPXGA9RVf7x+OO8O2kSZa6uS9LR49SqWpWF8+dTvXr1XF\/7+KOPEhwUxIRXXuH36GgaNW3KK19+yQ033FBE0ReuZcuW0aldCGHV\/zzByuEQBvfzY8GC2fTp08eD0V0ZLPkb4yHTp09nyowZVH7qMXyDgghMT+fIwsX0HzSIH5Yty\/W1IsL9o0Zx\/6hRudYrqUJCQoiJvXgt\/ROxSpkyoUUf0BXIpn2M8ZA333uP0jd2wDcoCADx8SHk5hvZsGED0dHRHo7Os26++WZ2709n3sL4jLI9+1N4f2oigwff68HIrhw28jfGQ+LiTuEbEpKlTPz8KBUUdMWuIZ9fpUuXZs7cb+nbpwcvTTxJ2TK+\/LjuNC+99BpNmzb1dHhXBEv+xnhI7x49mLxyBf5X1ckoS9q7n1LiXKPG27Vu3Zr9B46wbNkyEhISmNaxI+XKlfN0WFcMO8nLGA+JjY2lRds2nClbBp9GDUk\/foKkH39m2ief0KtXL0+HZ0ooO8nLmGKufPnybF63nqcH3U3LuHj6X3U1P\/\/wgyV+UyRs5G+MKTR\/\/PEHy5Yto0yZMtx8882UKlUq7xeZArGRvzHGo1588XkaNqzLjM8f5sXxf6VunerYYK74sB2+xhi3W7VqFe9OfJEty6pSvaozzcz6Jp6\/9L2Fvft+x8\/PUo+n2cjfGON2n346mdFD\/TMSP0DfW4KpUjGNlStXejAyc55bkr+IdBORnSKyR0TGZPO8iMibrud\/EZHm7ujXGFM8JSacoWyZiy+DWLasLwkJCR6IyFyowMlfRHyBiUB3oBFwh4hcuLRgd6Ce6zYCeLeg\/Rpjiq8ePfvx8ReppKb+eUDJrr0prNsUT4cOHTwYmTnPHSP\/1sAeVd2nqinAF0DvC+r0Bj5Vp5+AUBGp5oa+jbmiffPNN0S2aEHpgADqNWrE1KlTPR1SvvTv35\/ylZtxfe9YJk45xdiXT9Gx7wleeeV1ypQp4+nwDO7Z4VsDOJTpcTTQJh91agBHLmxMREbg3DqgVq1abgjPmJLp22+\/ZcDgwQT17U21AX2JP3iIUY89RnJyMvfeW7zXt\/Hz82P2nO+YO3cu3303lzJlQln0\/TCaNGni6dCMS4GP8xeRfkBXVR3menw30FpV\/56pzjfAf1T1B9fjJcDjqro+t7btOH9T3KWmpjJ\/\/nwWL11K1SpVuGfwYGrWrOmWtqNat+ZIZCOCmkZmlCUdOIjOnMPhgwcRuXhO3ZiiPM4\/Gsj81x4GHL6MOsaUKMnJyXS8+WaGPvoPph3cxxvfL6RhZCSLFi1yS\/u7d+zA\/+q6WcpK167FiaNHSUxMdEsfxnu5Y9pnLVBPROoAvwMDgTsvqDMPGC0iX+CcEopT1YumfIwpSSZPnsy2E8cpO3ok4uMcR\/lFNmbQPfdw5NChAh\/LHn7VVcQcOEhg4z+Pn0j5\/TChFcoTEBBQoLaNKfDIX1VTgdHAQmA78JWqbhWRkSIy0lVtAbAP2ANMBkrUFSgOHjzIY\/94jO439+Cfz\/yTP\/74w9MhmWJg2tczcbRtnZH4AQLqXU1a6VJs3LixwO0\/989\/cnbOfBL37EVVST4UTcIXM3lmzJM25WMKzC2n2anqApwJPnPZpEz3FbjfHX0VtXXr1tG5001USqlBYEoZdq6awTsT3+WnNT9Sr149T4dnPKh0qdLouZQsZapKekqKW9aw6du3L0nJyTz57D85uG8\/lapVZfyTT12xV+8yRcsWdstDq+atObtRqS7hGWUHZScNu9dh7vy5ngvMeNy0adO4\/5mnKTtyGD7+\/gDEr11P8Jr17N2xw62j89TUVFsSweRLfnf42l9TLlJSUti4eQMdLjhtoWp6bZYuW+qhqExxMXDgQBYvX85XE14lsHFD9OQpiIllzsKFbp+WscRv3M3+onLh6+uLn5+DMymnCNYy+Irz40ohieCgkDxeba50Pj4+THn\/fR596CFWrlxJpUqV6NmzJ6VLl\/Z0aMbkyZJ\/Lt59511EhU38gKJU13Dq0JBDAbsYMXK4p8MzxUSjRo1o1OjCFU3MeXFxcaxZs4Zy5crRokUL21ldTFjyz8GMGTP415NjiTrXnmApS7ImsoWf+dF3IbfdchvP\/PMZT4doTLE3ceJbPPPMGJo2CuLIsXMEBFbi61nfctVVV3k6NK9nO3xz0CyyOfprAJWkekZZkp5lg\/8KYk\/F2Ka9MXlYtWoVg+64haVfV6BubQeqylsfnOHjmWXYuGmnbQEUEruSVwFF\/x5NMGWzlPlLICicPn3aQ1EZU3JM+XAij9wXQN3aDgBEhL8PCyHx7HHWr891ZRdTBCz556Bly5bESNaTueI0hjJlylChQgUPRWVMyXEy9gTVqmZNMSJCtcoOTp486aGozHmW\/HPw\/ITx\/B6wl0PsIUFP84ceYlfgJl569UV8fOxjMyYvnW\/uzdSvU8k8tbz3QAq\/bE+gTZsLF\/41Rc2yWA6aN2\/Oyv+toEGPWvxWdRtl2zqYPvNz7r77bk+HZjxIVTl58iRJSUmeDqXYGzp0KEdjqtJ7yEm+mneGNyfH0fn2WJ57boKt6V8M2A5fY\/Jp8eLFjHzg70Qf\/A0R6D9gIO+8+SZBQUGeDq3YSkhI4KOPPmLxojmUq1CJe++9n\/bt23s6rCtafnf4WvI3Jh+2bNnCdTfcQFC\/PgQ0akh6QgLx8xZwXfUa\/Hf2bE+Hd8mio6MZO\/ZJvvt2ASEhQQy+5z4effRxHA6Hp0MzBWRH+xjjRq++8Qb+7a8jMKIx4uODb0gIIf37snTZMg4ePOjp8C7JyZMnub59KyoFfseyr0P4+HVYtug1hv71Dk+HZoqQJX9j8mHH7t34hlXPUubjcBBUvVqJS\/4ffvgB17ZI4\/mnynFVeClaRfkz56NyfP\/9d+zatcvT4ZkiYsnfmHy4rlUrUnftyVKWlpBAfHQ0DRs29FBUl2fzxh+5uUPW\/\/r+\/j60ax3M5s2bPRSVKWqW\/I3Jh0ceeoi0X37l9PdLORcTw9nde4h95326d+te4o5cqXNVQzZuybqvLz1d2bw1iTp16ngoKlPULPkbkw9hYWGsWb2aDoHBnH77PWKnfEp6yjmWb9hAlerVmTVrlqdDzLfhw0fyxZxEps48TWqqcvJUGg88fYqwmvVp0aKFp8MzRcSO9jHmEqSkpBAWHg6dOxLUsjkiQvLB34ib8gmb1q7j6quvLnAfu3fvZtr06SQmJtK7Vy\/atm3r9nVw1qxZw0MPDmfzL9sREfrcditvvPk+5cuXd2s\/pujZ0T7GFIJFixahoWUJbvXn0sSla9cioGULPpjyYYHbn\/zBB0S1asVbK5bx\/sb1dOvTh5H334+7B2mtW7dm9Y+bOXz4OMePn+KzqTMt8XsZW9LZmHxKS0tj7dq1pPkImpaG+PpmPJdeJoSjx08UqP0TJ07w4COPUOGBUTgqV3K2e2MHvnh9IncOGECHDh0K1H52ypYtm3clc0Wykb8x+fDTTz8RViecN6ZM4cwfxzj07xdI3LkbAE1Phy3b6NGlS4H6+Pbbbwm+pn5G4gfw8ffHr2Uzvpw5s0BtG3MhG\/kbk4czZ87QrectlO7Tm\/KRjSkPJO7azdEPP6HCbT1J37KNhtWr06dPnwL143A4IDXtonJJTcNh1\/A1bmYjf2PyMGvWLBy1axMU2TijLKB+PYIjGlF24xaeH\/13lixcWOCLrPfo0YOz+\/aTfPC3jLLUuNMkr13H3YMGFahtYy5kwwlj8hATE4OWCbmo3K9CBQZ07c7IkSPd0k+ZMmWY\/tlnDLzrLoIa1IfSpUjY8itjHn+cli3zPHjDmEtiyd+YPHTs2JF\/TZhAeo+u+Lgu36mpqaRv3U7nx8e4ta9bb72VQ\/v3M2fOHJKSkujxWQ\/Cw8Pd2ocxYMf5G5Mvdw0ZwjerVuK4ri34+pL6489c27Ah82fPsWvRmmLFjvM3xo0+nTKFd59\/gaaxcUT8cZzXnnyKuTO\/tsRvSqwCjfxFpDzwJRAOHAD6q+pFF+cUkQPAGSANSM3PrxLYyN8YYy5VUY38xwBLVLUesMT1OCedVDUqv4nfGGNM4Slo8u8NfOK6\/wlwWwHbM8YYUwQKmvyrqOoRANe\/lXOop8AiEVkvIiNya1BERojIOhFZd\/z48QKGZ4wxJjt5HuopIouBqtk89fQl9NNOVQ+LSGXgexHZoaors6uoqu8D74Nzzv8S+jDGGJNPeSZ\/Vb0pp+dE5KiIVFPVIyJSDTiWQxuHXf8eE5HZQGsg2+RvjDGm8BV02mcecI\/r\/j3A3AsriEiQiIScvw90AX4tYL\/GGGMKoKBn+E4AvhKRe4HfgH4AIlId+EBVewBVgNmu46H9gGmq+l0B+zXG5CI2Npbp06dz5MgR2rdvT5cuXfDxsdN6zJ\/sDF9jrjA\/\/\/wzt\/bswk03lObq8DTmLlSq1Yhk7rxFlHYtT2GuXHaGrzFeSFUZck9\/Jv4nkKkTQxn7WAXWflcBUrfyzjvveDo8U4xY8jfmCrJjxw4Sz56i7y3BGWV+fsID95Zm9qxPPRiZKW4s+RtzBfHx8SEtTblwNjctHXwzXXbSGEv+xrjZkiVLaNexI5WqV+eGzp1ZsWJFkfVdv359yleowtSZ8RllycnpvDYpiX79hxZZHKb4s+RvjBvNnz+f2\/r3Z3etGvgPH8L2apW5pU8fFi1aVCT9iwiffjaTpyekcOvgUzzyr1NEdjpOxarXMmJErifXGy9jR\/sY40b1IyI43a4tgY0bZpQlbN5Clc2\/8ksR\/i0nJCQwe\/bsjEM927Zta8tPe4n8Hu1jV\/Iyxk3S09PZvXUr4cPuyVIe0LAB26dOL9JYgoKCuOuuu4q0T1Oy2LSPMW7i4+NDperVSDl8JEt5yu+HqRoW5qGojMmeJX9j3OiJRx\/j7MzZnDvmXJE25Y+jnJ01l6cefdTDkRmTlU37GONGjzz0EImJibz8yiukquLw8eGpMWMYOXKkp0MzJgvb4WtMITh37hwxMTFUqFABh8Ph6XCMF7EdvsZ4kMPhoGrV7C6DYUzxYHP+xhjjhSz5G2OMF7Lkb4wxXsiSvzHGeCFL\/sYY44Us+RtjjBey5G+MMV7Ikr8xxnghS\/7GGOOFLPkbY4wXsuQPbNy4kX59+9OofmMG9BvI5s2bPR2SMcYUKq9P\/qtWraJD+478MncXwbursGnWDq6\/7nr+97\/\/eTo0Y4wpNF6\/qmeLqJakbPajqtTMKDuiBwlq4cPP634q1L6NMcbd8ruqp1eP\/FWVjb9soDI1spRXpgbrN633UFTGGFP4vDr5iwjlQytwljNZys8ST4VyFTwUlTHGFL4CJX8R6SciW0UkXURy3MwQkW4islNE9ojImIL06W4PPPh3DgRuI0WTAEjWJA4EbufBhx\/0cGRXNlVl2rRpNG\/blpp16zJ46FD279\/v6bCM8RoFHfn\/CvQFVuZUQUR8gYlAd6ARcIeINCpgv27z9DNP0++vfVnnv5TNIatY77+UO4b1Z8yYJzwd2hVt3PjxjBrzBIebNEL792XBkWhatm1LdHS0p0Mzxiu4ZYeviCwHHlXVi\/bOisi1wFhV7ep6\/CSAqv4nr3aL8jKOp06d4rfffqN27dqULVu2SPr0VqdPn6ZqWBgV\/\/EgfuVC\/yyfO59BTZvxxmuveS44Y0q44nQZxxrAoUyPo4E2RdDvJQkNDSU0NNTTYXiFbdu2EVilcpbED+BodA0rV6\/2TFDGeJk8k7+ILAayuxjp06o6Nx99SDZlOW5uiMgIYARArVq18tG8KWnCwsI4e+w4wSnn8Cn158XNU4\/8QZ3atT0YmTHeI8\/kr6o3FbCPaKBmpsdhwOFc+nsfeB+c0z4F7NsUQ2FhYXTq1ImfZ80hqFdPfAMDSNq7n6RlK3n8m288HZ4xXqEopn3WAvVEpA7wOzAQuLMI+jXF2Beffca9993Hf8dPwM\/fn6AAfz567z3atm3r6dCM8QoFSv4i0gd4C6gEfCMim1S1q4hUBz5Q1R6qmioio4GFgC8wRVW3FjhyU6KFhITw1bRpxMXFcfLkSWrWrImvr6+nwzLGa3j98g7GGHMlseUdjDHG5MiSvzHGeCFL\/sYY44Us+RtjjBey5G9MIUtMTCQxMdHTYRiThSV\/YwrJgQMH6NytG2VCQykTGkrnbt04cOCAp8MyBiiak7yM8TpJSUm069CB5CYR1Hh+LAC\/rPiBdh06sHfnTvz9\/T0boPF6NvI3phDMmjWLlLJlKHPzjfiUKoVPqVKE3HwjKWXLMGvWLE+HZ4wlf2MKw969e0mrdvF6iGnVqrJv3z4PRGRMVpb8jSkEUVFRyP4DZD6DXlWRfftp2rSpByMzxsmSvzGFoEePHlQPDuH0V1+TcvQYKUePcfqrr6keUoYePXp4OjxjLPkbUxh8fX1ZtXQpd7RsTfKUT0me8il3tGzND8uW2QJ2pliwhd2MMeYKYgu7GWOMyZElf2OM8UKW\/I0xxgtZ8jfGGC9kyd8YY7yQJX9jjPFClvyNMcYLWfI3xhgvZMnfGGO8kCV\/Y4zxQpb8jTHGC1nyN8YYL2TJ3xhjvJAlf2OM8UKW\/I0xxgsVKPmLSD8R2Soi6SKS4\/rRInJARLaIyCYRsQX6jTHGw\/wK+Ppfgb7Ae\/mo20lVTxSwP2OMMW5QoOSvqtsBRMQ90RhjjCkSBR3555cCi0REgfdU9f2cKorICGCE62G8iOwshHgqAiVtK6SkxVzS4oWSF3NJixcs5qLQID+V8kz+IrIYqJrNU0+r6tx8BtNOVQ+LSGXgexHZoaors6vo+mHI8cfBHURkXX6ucVmclLSYS1q8UPJiLmnxgsVcFPK7XzXP5K+qNxU0GFU97Pr3mIjMBloD2SZ\/Y4wxha\/QD\/UUkSARCTl\/H+iCc0exMcYYDynooZ59RCQauBb4RkQWusqri8gCV7UqwA8ishlYA3yjqt8VpF83KNRppUJS0mIuafFCyYu5pMULFnNRyFe8oqqFHYgxxphixs7wNcYYL2TJ3xhjvJDXJn8ReU5EfnEtObFIRKp7OqbciMjLIrLDFfNsEQn1dEx5ye\/yH54mIt1EZKeI7BGRMZ6OJy8iMkVEjolIiTlwQkRqisgyEdnu+pt40NMx5UZE\/EVkjYhsdsX7b0\/HlF8i4isiG0Vkfm71vDb5Ay+rahNVjQLmA896OJ68fA9EqGoTYBfwpIfjyY\/zy38U28N6RcQXmAh0BxoBd4hII89GlaePgW6eDuISpQL\/UNWGQFvg\/mL+OScDN6pqUyAK6CYibT0bUr49CGzPq5LXJn9VPZ3pYRDOs5CLLVVdpKqproc\/AWGejCc\/VHW7qhbGGdru1BrYo6r7VDUF+ALo7eGYcuU6QTLW03FcClU9oqobXPfP4ExONTwbVc7UKd710OG6FescASAiYcAtwAd51fXa5A8gIs+LyCFgEMV\/5J\/ZUOBbTwdxhagBHMr0OJpinJSuBCISDjQDfvZwKLlyTZ9sAo4B36tqsY7X5XXgcSA9r4pXdPIXkcUi8ms2t94Aqvq0qtYEPgdGezbavON11Xka5yb0556L9E\/5ibmYy25VwmI\/wiupRCQY+Bp46IKt72JHVdNc08JhQGsRifBwSLkSkZ7AMVVdn5\/6RbWwm0dcwtIU04BvgH8VYjh5yiteEbkH6Al01mJygoY7lv\/wsGigZqbHYcBhD8VyRRMRB87E\/7mqzvJ0PPmlqqdEZDnO\/SzFeSd7O6CXiPQA\/IEyIjJVVe\/KrvIVPfLPjYjUy\/SwF7DDU7Hkh4h0A54AeqnqWU\/HcwVZC9QTkToiUgoYCMzzcExXHHGu+\/4hsF1VX\/N0PHkRkUrnj6gTkQDgJop5jlDVJ1U1TFXDcf4dL80p8YMXJ39ggmt64hec6w0V60PPgLeBEJyrom4SkUmeDigvOS3\/UZy4dqKPBhbi3An5lapu9WxUuROR6cCPQAMRiRaRez0dUz60A+4GbnT9\/W5yjVCLq2rAMld+WItzzj\/XQydLGlvewRhjvJA3j\/yNMcZrWfI3xhgvZMnfGGO8kCV\/Y4zxQpb8jTHGC1nyN8YYL2TJ3xhjvND\/AxBG5GaULDeAAAAAAElFTkSuQmCC\n","width":0,"height":0,"type":"plot"}]}],"language":"PYTHON","inputCollapsed":false,"outputCollapsed":false}]}],"kernelType":"IPYTHON","language":"PYTHON"}}